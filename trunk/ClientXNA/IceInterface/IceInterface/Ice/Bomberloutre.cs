// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `Bomberloutre.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace BomberLoutreInterface
{
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class UserData : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public string gameTag;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int gameCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int winCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int drawCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int killCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int deathCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int suicideCount;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserData()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserData(string gameTag, int gameCount, int winCount, int drawCount, int killCount, int deathCount, int suicideCount)
        {
            this.gameTag = gameTag;
            this.gameCount = gameCount;
            this.winCount = winCount;
            this.drawCount = drawCount;
            this.killCount = killCount;
            this.deathCount = deathCount;
            this.suicideCount = suicideCount;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = 0;
            if(gameTag != null)
            {
                h__ = 5 * h__ + gameTag.GetHashCode();
            }
            h__ = 5 * h__ + gameCount.GetHashCode();
            h__ = 5 * h__ + winCount.GetHashCode();
            h__ = 5 * h__ + drawCount.GetHashCode();
            h__ = 5 * h__ + killCount.GetHashCode();
            h__ = 5 * h__ + deathCount.GetHashCode();
            h__ = 5 * h__ + suicideCount.GetHashCode();
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            UserData o__ = (UserData)other__;
            if(gameTag == null)
            {
                if(o__.gameTag != null)
                {
                    return false;
                }
            }
            else
            {
                if(!gameTag.Equals(o__.gameTag))
                {
                    return false;
                }
            }
            if(!gameCount.Equals(o__.gameCount))
            {
                return false;
            }
            if(!winCount.Equals(o__.winCount))
            {
                return false;
            }
            if(!drawCount.Equals(o__.drawCount))
            {
                return false;
            }
            if(!killCount.Equals(o__.killCount))
            {
                return false;
            }
            if(!deathCount.Equals(o__.deathCount))
            {
                return false;
            }
            if(!suicideCount.Equals(o__.suicideCount))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(UserData lhs__, UserData rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(UserData lhs__, UserData rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeString(gameTag);
            os__.writeInt(gameCount);
            os__.writeInt(winCount);
            os__.writeInt(drawCount);
            os__.writeInt(killCount);
            os__.writeInt(deathCount);
            os__.writeInt(suicideCount);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            gameTag = is__.readString();
            gameCount = is__.readInt();
            winCount = is__.readInt();
            drawCount = is__.readInt();
            killCount = is__.readInt();
            deathCount = is__.readInt();
            suicideCount = is__.readInt();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface GameUserInterface : Ice.Object, GameUserInterfaceOperations_, GameUserInterfaceOperationsNC_
    {
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class GameData : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public string name;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int roundCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int state;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int playerCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BomberLoutreInterface.GameUserInterfacePrx gameui;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public GameData()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public GameData(string name, int roundCount, int state, int playerCount, BomberLoutreInterface.GameUserInterfacePrx gameui)
        {
            this.name = name;
            this.roundCount = roundCount;
            this.state = state;
            this.playerCount = playerCount;
            this.gameui = gameui;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = 0;
            if(name != null)
            {
                h__ = 5 * h__ + name.GetHashCode();
            }
            h__ = 5 * h__ + roundCount.GetHashCode();
            h__ = 5 * h__ + state.GetHashCode();
            h__ = 5 * h__ + playerCount.GetHashCode();
            if(gameui != null)
            {
                h__ = 5 * h__ + gameui.GetHashCode();
            }
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            GameData o__ = (GameData)other__;
            if(name == null)
            {
                if(o__.name != null)
                {
                    return false;
                }
            }
            else
            {
                if(!name.Equals(o__.name))
                {
                    return false;
                }
            }
            if(!roundCount.Equals(o__.roundCount))
            {
                return false;
            }
            if(!state.Equals(o__.state))
            {
                return false;
            }
            if(!playerCount.Equals(o__.playerCount))
            {
                return false;
            }
            if(gameui == null)
            {
                if(o__.gameui != null)
                {
                    return false;
                }
            }
            else
            {
                if(!gameui.Equals(o__.gameui))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(GameData lhs__, GameData rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(GameData lhs__, GameData rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeString(name);
            os__.writeInt(roundCount);
            os__.writeInt(state);
            os__.writeInt(playerCount);
            BomberLoutreInterface.GameUserInterfacePrxHelper.write__(os__, gameui);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            name = is__.readString();
            roundCount = is__.readInt();
            state = is__.readInt();
            playerCount = is__.readInt();
            gameui = BomberLoutreInterface.GameUserInterfacePrxHelper.read__(is__);
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface GameInterface : Ice.Object, GameInterfaceOperations_, GameInterfaceOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface GameWaitRoom : Ice.Object, GameWaitRoomOperations_, GameWaitRoomOperationsNC_
    {
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class Player : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int posX;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int posY;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int width;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int height;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int killCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int deathCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int suicideCount;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BomberLoutreInterface.UserData related;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public Player()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public Player(int posX, int posY, int width, int height, int killCount, int deathCount, int suicideCount, BomberLoutreInterface.UserData related)
        {
            this.posX = posX;
            this.posY = posY;
            this.width = width;
            this.height = height;
            this.killCount = killCount;
            this.deathCount = deathCount;
            this.suicideCount = suicideCount;
            this.related = related;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = 0;
            h__ = 5 * h__ + posX.GetHashCode();
            h__ = 5 * h__ + posY.GetHashCode();
            h__ = 5 * h__ + width.GetHashCode();
            h__ = 5 * h__ + height.GetHashCode();
            h__ = 5 * h__ + killCount.GetHashCode();
            h__ = 5 * h__ + deathCount.GetHashCode();
            h__ = 5 * h__ + suicideCount.GetHashCode();
            if(related != null)
            {
                h__ = 5 * h__ + related.GetHashCode();
            }
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            Player o__ = (Player)other__;
            if(!posX.Equals(o__.posX))
            {
                return false;
            }
            if(!posY.Equals(o__.posY))
            {
                return false;
            }
            if(!width.Equals(o__.width))
            {
                return false;
            }
            if(!height.Equals(o__.height))
            {
                return false;
            }
            if(!killCount.Equals(o__.killCount))
            {
                return false;
            }
            if(!deathCount.Equals(o__.deathCount))
            {
                return false;
            }
            if(!suicideCount.Equals(o__.suicideCount))
            {
                return false;
            }
            if(related == null)
            {
                if(o__.related != null)
                {
                    return false;
                }
            }
            else
            {
                if(!related.Equals(o__.related))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(Player lhs__, Player rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(Player lhs__, Player rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeInt(posX);
            os__.writeInt(posY);
            os__.writeInt(width);
            os__.writeInt(height);
            os__.writeInt(killCount);
            os__.writeInt(deathCount);
            os__.writeInt(suicideCount);
            if(related == null)
            {
                BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                tmp__.write__(os__);
            }
            else
            {
                related.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            posX = is__.readInt();
            posY = is__.readInt();
            width = is__.readInt();
            height = is__.readInt();
            killCount = is__.readInt();
            deathCount = is__.readInt();
            suicideCount = is__.readInt();
            if(related == null)
            {
                related = new BomberLoutreInterface.UserData();
            }
            related.read__(is__);
        }

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial struct Point
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int x;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public int y;

        #endregion

        #region Constructor

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public Point(int x, int y)
        {
            this.x = x;
            this.y = y;
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = 0;
            h__ = 5 * h__ + x.GetHashCode();
            h__ = 5 * h__ + y.GetHashCode();
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(!(other__ is Point))
            {
                return false;
            }
            Point o__ = (Point)other__;
            if(!x.Equals(o__.x))
            {
                return false;
            }
            if(!y.Equals(o__.y))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(Point lhs__, Point rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(Point lhs__, Point rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeInt(x);
            os__.writeInt(y);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            x = is__.readInt();
            y = is__.readInt();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface MapInterface : Ice.Object, MapInterfaceOperations_, MapInterfaceOperationsNC_
    {
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class Map : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BomberLoutreInterface.MapInterfacePrx mi;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BomberLoutreInterface.MapItem[] items;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BomberLoutreInterface.Player[] players;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public Map()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public Map(BomberLoutreInterface.MapInterfacePrx mi, BomberLoutreInterface.MapItem[] items, BomberLoutreInterface.Player[] players)
        {
            this.mi = mi;
            this.items = items;
            this.players = players;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = 0;
            if(mi != null)
            {
                h__ = 5 * h__ + mi.GetHashCode();
            }
            if(items != null)
            {
                h__ = 5 * h__ + IceUtilInternal.Arrays.GetHashCode(items);
            }
            if(players != null)
            {
                h__ = 5 * h__ + IceUtilInternal.Arrays.GetHashCode(players);
            }
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            Map o__ = (Map)other__;
            if(mi == null)
            {
                if(o__.mi != null)
                {
                    return false;
                }
            }
            else
            {
                if(!mi.Equals(o__.mi))
                {
                    return false;
                }
            }
            if(items == null)
            {
                if(o__.items != null)
                {
                    return false;
                }
            }
            else
            {
                if(!IceUtilInternal.Arrays.Equals(items, o__.items))
                {
                    return false;
                }
            }
            if(players == null)
            {
                if(o__.players != null)
                {
                    return false;
                }
            }
            else
            {
                if(!IceUtilInternal.Arrays.Equals(players, o__.players))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(Map lhs__, Map rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(Map lhs__, Map rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            BomberLoutreInterface.MapInterfacePrxHelper.write__(os__, mi);
            if(items == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(items.Length);
                for(int ix__ = 0; ix__ < items.Length; ++ix__)
                {
                    items[ix__].write__(os__);
                }
            }
            if(players == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(players.Length);
                for(int ix__ = 0; ix__ < players.Length; ++ix__)
                {
                    (players[ix__] == null ? new BomberLoutreInterface.Player() : players[ix__]).write__(os__);
                }
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            mi = BomberLoutreInterface.MapInterfacePrxHelper.read__(is__);
            {
                int szx__ = is__.readAndCheckSeqSize(10);
                items = new BomberLoutreInterface.MapItem[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    items[ix__].read__(is__);
                }
            }
            {
                int szx__ = is__.readAndCheckSeqSize(53);
                players = new BomberLoutreInterface.Player[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    players[ix__] = new BomberLoutreInterface.Player();
                    players[ix__].read__(is__);
                }
            }
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface MapObserver : Ice.Object, MapObserverOperations_, MapObserverOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class UserException : Ice.UserException
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public string reason;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserException()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserException(_System.Exception ex__) : base(ex__)
        {
        }

        private void initDM__(string reason)
        {
            this.reason = reason;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserException(string reason)
        {
            initDM__(reason);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserException(string reason, _System.Exception ex__) : base(ex__)
        {
            initDM__(reason);
        }

        #endregion

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string ice_name()
        {
            return "BomberLoutreInterface::UserException";
        }

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = 0;
            if(reason != null)
            {
                h__ = 5 * h__ + reason.GetHashCode();
            }
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(other__ == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            UserException o__ = other__ as UserException;
            if(o__ == null)
            {
                return false;
            }
            if(reason == null)
            {
                if(o__.reason != null)
                {
                    return false;
                }
            }
            else
            {
                if(!reason.Equals(o__.reason))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(UserException lhs__, UserException rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(UserException lhs__, UserException rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeString("::BomberLoutreInterface::UserException");
            os__.startWriteSlice();
            os__.writeString(reason);
            os__.endWriteSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readString();
            }
            is__.startReadSlice();
            reason = is__.readString();
            is__.endReadSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "exception BomberLoutreInterface::UserException was not generated with stream support";
            throw ex;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "exception BomberLoutreInterface::UserException was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class BadLoginException : BomberLoutreInterface.UserException
    {
        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BadLoginException()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BadLoginException(_System.Exception ex__) : base(ex__)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BadLoginException(string reason) : base(reason)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BadLoginException(string reason, _System.Exception ex__) : base(reason, ex__)
        {
        }

        #endregion

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string ice_name()
        {
            return "BomberLoutreInterface::BadLoginException";
        }

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = base.GetHashCode();
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(other__ == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            BadLoginException o__ = other__ as BadLoginException;
            if(o__ == null)
            {
                return false;
            }
            if(!base.Equals(other__))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(BadLoginException lhs__, BadLoginException rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(BadLoginException lhs__, BadLoginException rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeString("::BomberLoutreInterface::BadLoginException");
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readString();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "exception BomberLoutreInterface::BadLoginException was not generated with stream support";
            throw ex;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "exception BomberLoutreInterface::BadLoginException was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class BadPasswordException : BomberLoutreInterface.UserException
    {
        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BadPasswordException()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BadPasswordException(_System.Exception ex__) : base(ex__)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BadPasswordException(string reason) : base(reason)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public BadPasswordException(string reason, _System.Exception ex__) : base(reason, ex__)
        {
        }

        #endregion

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string ice_name()
        {
            return "BomberLoutreInterface::BadPasswordException";
        }

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = base.GetHashCode();
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(other__ == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            BadPasswordException o__ = other__ as BadPasswordException;
            if(o__ == null)
            {
                return false;
            }
            if(!base.Equals(other__))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(BadPasswordException lhs__, BadPasswordException rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(BadPasswordException lhs__, BadPasswordException rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeString("::BomberLoutreInterface::BadPasswordException");
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readString();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "exception BomberLoutreInterface::BadPasswordException was not generated with stream support";
            throw ex;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "exception BomberLoutreInterface::BadPasswordException was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class UserAlreadyExistsException : BomberLoutreInterface.UserException
    {
        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserAlreadyExistsException()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserAlreadyExistsException(_System.Exception ex__) : base(ex__)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserAlreadyExistsException(string reason) : base(reason)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public UserAlreadyExistsException(string reason, _System.Exception ex__) : base(reason, ex__)
        {
        }

        #endregion

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string ice_name()
        {
            return "BomberLoutreInterface::UserAlreadyExistsException";
        }

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = base.GetHashCode();
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(other__ == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            UserAlreadyExistsException o__ = other__ as UserAlreadyExistsException;
            if(o__ == null)
            {
                return false;
            }
            if(!base.Equals(other__))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(UserAlreadyExistsException lhs__, UserAlreadyExistsException rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(UserAlreadyExistsException lhs__, UserAlreadyExistsException rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeString("::BomberLoutreInterface::UserAlreadyExistsException");
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readString();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "exception BomberLoutreInterface::UserAlreadyExistsException was not generated with stream support";
            throw ex;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "exception BomberLoutreInterface::UserAlreadyExistsException was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface ServerInterface : Ice.Object, ServerInterfaceOperations_, ServerInterfaceOperationsNC_
    {
    }
}

namespace BomberLoutreInterface
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameUserInterface_getCreatorName(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameUserInterface_userReady();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameUserInterface_leaveGame();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_getName(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_getState(int ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_getRoundCount(int ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_setName();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_setState();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_setRoundCount();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_kickPlayer();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_invitePlayer();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_addBot();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_removeBot();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_getMapList(string[] ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_createMap(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_startMap();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_endMap();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameInterface_removeGame(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameWaitRoom_newUserInRoom();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameWaitRoom_userLeftRoom();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameWaitRoom_allUsersReady();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameWaitRoom_userReady();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameWaitRoom_gameDataUpdated();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameWaitRoom_newMapDefined();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameWaitRoom_gameStart();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_GameWaitRoom_gameEnd();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapInterface_getId(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapInterface_getWidth(int ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapInterface_getHeight(int ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapInterface_moveUp();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapInterface_moveDown();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapInterface_moveLeft();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapInterface_moveRight();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapInterface_dropBomb();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapObserver_refreshMapItems();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapObserver_refreshPlayers();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapObserver_bombHasBeenPlanted();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapObserver_bombExploded();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapObserver_bombKicked();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapObserver_bonusesDropped();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_MapObserver_playerDied();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ServerInterface_connect(BomberLoutreInterface.UserData ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ServerInterface_createUser(BomberLoutreInterface.UserData ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ServerInterface_deleteUser(bool ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ServerInterface_addGame(BomberLoutreInterface.GameInterfacePrx ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ServerInterface_joinGame(BomberLoutreInterface.Map ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ServerInterface_getGameList(BomberLoutreInterface.GameData[] ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ServerInterface_getUserList(BomberLoutreInterface.UserData[] ret__);
}

namespace BomberLoutreInterface
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameUserInterfacePrx : Ice.ObjectPrx
    {
        string getCreatorName();
        string getCreatorName(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_getCreatorName> begin_getCreatorName();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_getCreatorName> begin_getCreatorName(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getCreatorName(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getCreatorName(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_getCreatorName(Ice.AsyncResult r__);

        void userReady(BomberLoutreInterface.UserData u);
        void userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_userReady> begin_userReady(BomberLoutreInterface.UserData u);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_userReady> begin_userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_userReady(BomberLoutreInterface.UserData u, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_userReady(Ice.AsyncResult r__);

        void leaveGame(BomberLoutreInterface.UserData u);
        void leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_leaveGame> begin_leaveGame(BomberLoutreInterface.UserData u);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_leaveGame> begin_leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_leaveGame(BomberLoutreInterface.UserData u, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_leaveGame(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameInterfacePrx : Ice.ObjectPrx
    {
        string getName();
        string getName(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getName> begin_getName();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getName> begin_getName(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getName(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getName(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_getName(Ice.AsyncResult r__);

        int getState();
        int getState(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getState> begin_getState();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getState> begin_getState(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getState(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getState(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_getState(Ice.AsyncResult r__);

        int getRoundCount();
        int getRoundCount(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getRoundCount> begin_getRoundCount();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getRoundCount> begin_getRoundCount(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getRoundCount(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getRoundCount(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_getRoundCount(Ice.AsyncResult r__);

        void setName(string newname);
        void setName(string newname, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setName> begin_setName(string newname);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setName> begin_setName(string newname, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_setName(string newname, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_setName(string newname, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_setName(Ice.AsyncResult r__);

        void setState(int newstate);
        void setState(int newstate, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setState> begin_setState(int newstate);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setState> begin_setState(int newstate, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_setState(int newstate, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_setState(int newstate, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_setState(Ice.AsyncResult r__);

        void setRoundCount(int newcount);
        void setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setRoundCount> begin_setRoundCount(int newcount);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setRoundCount> begin_setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_setRoundCount(int newcount, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_setRoundCount(Ice.AsyncResult r__);

        void kickPlayer(string username);
        void kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_kickPlayer> begin_kickPlayer(string username);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_kickPlayer> begin_kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_kickPlayer(string username, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_kickPlayer(Ice.AsyncResult r__);

        void invitePlayer(string username);
        void invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_invitePlayer> begin_invitePlayer(string username);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_invitePlayer> begin_invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_invitePlayer(string username, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_invitePlayer(Ice.AsyncResult r__);

        void addBot();
        void addBot(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_addBot> begin_addBot();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_addBot> begin_addBot(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addBot(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addBot(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_addBot(Ice.AsyncResult r__);

        void removeBot();
        void removeBot(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeBot> begin_removeBot();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeBot> begin_removeBot(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_removeBot(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_removeBot(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_removeBot(Ice.AsyncResult r__);

        string[] getMapList();
        string[] getMapList(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getMapList> begin_getMapList();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getMapList> begin_getMapList(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getMapList(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getMapList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string[] end_getMapList(Ice.AsyncResult r__);

        string createMap(string mode, string mapSkin);
        string createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_createMap> begin_createMap(string mode, string mapSkin);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_createMap> begin_createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_createMap(string mode, string mapSkin, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_createMap(Ice.AsyncResult r__);

        void startMap();
        void startMap(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_startMap> begin_startMap();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_startMap> begin_startMap(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_startMap(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_startMap(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_startMap(Ice.AsyncResult r__);

        void endMap();
        void endMap(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_endMap> begin_endMap();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_endMap> begin_endMap(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_endMap(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_endMap(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_endMap(Ice.AsyncResult r__);

        bool removeGame();
        bool removeGame(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeGame> begin_removeGame();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeGame> begin_removeGame(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_removeGame(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_removeGame(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_removeGame(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameWaitRoomPrx : Ice.ObjectPrx
    {
        void newUserInRoom(string username);
        void newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newUserInRoom> begin_newUserInRoom(string username);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newUserInRoom> begin_newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_newUserInRoom(string username, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_newUserInRoom(Ice.AsyncResult r__);

        void userLeftRoom(string username);
        void userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userLeftRoom> begin_userLeftRoom(string username);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userLeftRoom> begin_userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_userLeftRoom(string username, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_userLeftRoom(Ice.AsyncResult r__);

        void allUsersReady();
        void allUsersReady(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_allUsersReady> begin_allUsersReady();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_allUsersReady> begin_allUsersReady(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_allUsersReady(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_allUsersReady(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_allUsersReady(Ice.AsyncResult r__);

        void userReady(string username);
        void userReady(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userReady> begin_userReady(string username);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userReady> begin_userReady(string username, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_userReady(string username, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_userReady(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_userReady(Ice.AsyncResult r__);

        void gameDataUpdated(BomberLoutreInterface.GameData g);
        void gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameDataUpdated> begin_gameDataUpdated(BomberLoutreInterface.GameData g);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameDataUpdated> begin_gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_gameDataUpdated(BomberLoutreInterface.GameData g, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_gameDataUpdated(Ice.AsyncResult r__);

        void newMapDefined(string map);
        void newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newMapDefined> begin_newMapDefined(string map);
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newMapDefined> begin_newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_newMapDefined(string map, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_newMapDefined(Ice.AsyncResult r__);

        void gameStart();
        void gameStart(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameStart> begin_gameStart();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameStart> begin_gameStart(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_gameStart(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_gameStart(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_gameStart(Ice.AsyncResult r__);

        void gameEnd();
        void gameEnd(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameEnd> begin_gameEnd();
        Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameEnd> begin_gameEnd(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_gameEnd(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_gameEnd(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_gameEnd(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface MapInterfacePrx : Ice.ObjectPrx
    {
        string getId();
        string getId(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getId> begin_getId();
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getId> begin_getId(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getId(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getId(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_getId(Ice.AsyncResult r__);

        int getWidth();
        int getWidth(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getWidth> begin_getWidth();
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getWidth> begin_getWidth(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getWidth(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getWidth(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_getWidth(Ice.AsyncResult r__);

        int getHeight();
        int getHeight(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getHeight> begin_getHeight();
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getHeight> begin_getHeight(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getHeight(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getHeight(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        int end_getHeight(Ice.AsyncResult r__);

        void moveUp(BomberLoutreInterface.Player p);
        void moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveUp> begin_moveUp(BomberLoutreInterface.Player p);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveUp> begin_moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_moveUp(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_moveUp(Ice.AsyncResult r__);

        void moveDown(BomberLoutreInterface.Player p);
        void moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveDown> begin_moveDown(BomberLoutreInterface.Player p);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveDown> begin_moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_moveDown(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_moveDown(Ice.AsyncResult r__);

        void moveLeft(BomberLoutreInterface.Player p);
        void moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveLeft> begin_moveLeft(BomberLoutreInterface.Player p);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveLeft> begin_moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_moveLeft(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_moveLeft(Ice.AsyncResult r__);

        void moveRight(BomberLoutreInterface.Player p);
        void moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveRight> begin_moveRight(BomberLoutreInterface.Player p);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveRight> begin_moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_moveRight(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_moveRight(Ice.AsyncResult r__);

        void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b);
        void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_dropBomb> begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_dropBomb> begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_dropBomb(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface MapObserverPrx : Ice.ObjectPrx
    {
        void refreshMapItems(BomberLoutreInterface.MapItem[] mi);
        void refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshMapItems> begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshMapItems> begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_refreshMapItems(Ice.AsyncResult r__);

        void refreshPlayers(BomberLoutreInterface.Player[] p);
        void refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshPlayers> begin_refreshPlayers(BomberLoutreInterface.Player[] p);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshPlayers> begin_refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_refreshPlayers(BomberLoutreInterface.Player[] p, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_refreshPlayers(Ice.AsyncResult r__);

        void bombHasBeenPlanted(BomberLoutreInterface.Bomb b);
        void bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombHasBeenPlanted> begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombHasBeenPlanted> begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_bombHasBeenPlanted(Ice.AsyncResult r__);

        void bombExploded(BomberLoutreInterface.Bomb b);
        void bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombExploded> begin_bombExploded(BomberLoutreInterface.Bomb b);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombExploded> begin_bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_bombExploded(BomberLoutreInterface.Bomb b, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_bombExploded(Ice.AsyncResult r__);

        void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest);
        void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombKicked> begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombKicked> begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_bombKicked(Ice.AsyncResult r__);

        void bonusesDropped(BomberLoutreInterface.Bonus[] b);
        void bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bonusesDropped> begin_bonusesDropped(BomberLoutreInterface.Bonus[] b);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bonusesDropped> begin_bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_bonusesDropped(BomberLoutreInterface.Bonus[] b, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_bonusesDropped(Ice.AsyncResult r__);

        void playerDied(BomberLoutreInterface.Player p);
        void playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_playerDied> begin_playerDied(BomberLoutreInterface.Player p);
        Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_playerDied> begin_playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_playerDied(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_playerDied(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ServerInterfacePrx : Ice.ObjectPrx
    {
        BomberLoutreInterface.UserData connect(string login, string password);
        BomberLoutreInterface.UserData connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_connect> begin_connect(string login, string password);
        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_connect> begin_connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_connect(string login, string password, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        BomberLoutreInterface.UserData end_connect(Ice.AsyncResult r__);

        BomberLoutreInterface.UserData createUser(string login, string password);
        BomberLoutreInterface.UserData createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_createUser> begin_createUser(string login, string password);
        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_createUser> begin_createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_createUser(string login, string password, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        BomberLoutreInterface.UserData end_createUser(Ice.AsyncResult r__);

        bool deleteUser(string login);
        bool deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_deleteUser> begin_deleteUser(string login);
        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_deleteUser> begin_deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_deleteUser(string login, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_deleteUser(Ice.AsyncResult r__);

        BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo);
        BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_addGame> begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo);
        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_addGame> begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        BomberLoutreInterface.GameInterfacePrx end_addGame(Ice.AsyncResult r__);

        BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo);
        BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_joinGame> begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo);
        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_joinGame> begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        BomberLoutreInterface.Map end_joinGame(Ice.AsyncResult r__);

        BomberLoutreInterface.GameData[] getGameList();
        BomberLoutreInterface.GameData[] getGameList(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getGameList> begin_getGameList();
        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getGameList> begin_getGameList(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getGameList(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getGameList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        BomberLoutreInterface.GameData[] end_getGameList(Ice.AsyncResult r__);

        BomberLoutreInterface.UserData[] getUserList();
        BomberLoutreInterface.UserData[] getUserList(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getUserList> begin_getUserList();
        Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getUserList> begin_getUserList(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getUserList(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        BomberLoutreInterface.UserData[] end_getUserList(Ice.AsyncResult r__);
    }
}

namespace BomberLoutreInterface
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameUserInterfaceOperations_
    {
        string getCreatorName(Ice.Current current__);

        void userReady(BomberLoutreInterface.UserData u, Ice.Current current__);

        void leaveGame(BomberLoutreInterface.UserData u, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameUserInterfaceOperationsNC_
    {
        string getCreatorName();

        void userReady(BomberLoutreInterface.UserData u);

        void leaveGame(BomberLoutreInterface.UserData u);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameInterfaceOperations_
    {
        string getName(Ice.Current current__);

        int getState(Ice.Current current__);

        int getRoundCount(Ice.Current current__);

        void setName(string newname, Ice.Current current__);

        void setState(int newstate, Ice.Current current__);

        void setRoundCount(int newcount, Ice.Current current__);

        void kickPlayer(string username, Ice.Current current__);

        void invitePlayer(string username, Ice.Current current__);

        void addBot(Ice.Current current__);

        void removeBot(Ice.Current current__);

        string[] getMapList(Ice.Current current__);

        string createMap(string mode, string mapSkin, Ice.Current current__);

        void startMap(Ice.Current current__);

        void endMap(Ice.Current current__);

        bool removeGame(Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameInterfaceOperationsNC_
    {
        string getName();

        int getState();

        int getRoundCount();

        void setName(string newname);

        void setState(int newstate);

        void setRoundCount(int newcount);

        void kickPlayer(string username);

        void invitePlayer(string username);

        void addBot();

        void removeBot();

        string[] getMapList();

        string createMap(string mode, string mapSkin);

        void startMap();

        void endMap();

        bool removeGame();
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameWaitRoomOperations_
    {
        void newUserInRoom(string username, Ice.Current current__);

        void userLeftRoom(string username, Ice.Current current__);

        void allUsersReady(Ice.Current current__);

        void userReady(string username, Ice.Current current__);

        void gameDataUpdated(BomberLoutreInterface.GameData g, Ice.Current current__);

        void newMapDefined(string map, Ice.Current current__);

        void gameStart(Ice.Current current__);

        void gameEnd(Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameWaitRoomOperationsNC_
    {
        void newUserInRoom(string username);

        void userLeftRoom(string username);

        void allUsersReady();

        void userReady(string username);

        void gameDataUpdated(BomberLoutreInterface.GameData g);

        void newMapDefined(string map);

        void gameStart();

        void gameEnd();
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface MapInterfaceOperations_
    {
        string getId(Ice.Current current__);

        int getWidth(Ice.Current current__);

        int getHeight(Ice.Current current__);

        void moveUp(BomberLoutreInterface.Player p, Ice.Current current__);

        void moveDown(BomberLoutreInterface.Player p, Ice.Current current__);

        void moveLeft(BomberLoutreInterface.Player p, Ice.Current current__);

        void moveRight(BomberLoutreInterface.Player p, Ice.Current current__);

        void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface MapInterfaceOperationsNC_
    {
        string getId();

        int getWidth();

        int getHeight();

        void moveUp(BomberLoutreInterface.Player p);

        void moveDown(BomberLoutreInterface.Player p);

        void moveLeft(BomberLoutreInterface.Player p);

        void moveRight(BomberLoutreInterface.Player p);

        void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface MapObserverOperations_
    {
        void refreshMapItems(BomberLoutreInterface.MapItem[] mi, Ice.Current current__);

        void refreshPlayers(BomberLoutreInterface.Player[] p, Ice.Current current__);

        void bombHasBeenPlanted(BomberLoutreInterface.Bomb b, Ice.Current current__);

        void bombExploded(BomberLoutreInterface.Bomb b, Ice.Current current__);

        void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, Ice.Current current__);

        void bonusesDropped(BomberLoutreInterface.Bonus[] b, Ice.Current current__);

        void playerDied(BomberLoutreInterface.Player p, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface MapObserverOperationsNC_
    {
        void refreshMapItems(BomberLoutreInterface.MapItem[] mi);

        void refreshPlayers(BomberLoutreInterface.Player[] p);

        void bombHasBeenPlanted(BomberLoutreInterface.Bomb b);

        void bombExploded(BomberLoutreInterface.Bomb b);

        void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest);

        void bonusesDropped(BomberLoutreInterface.Bonus[] b);

        void playerDied(BomberLoutreInterface.Player p);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ServerInterfaceOperations_
    {
        BomberLoutreInterface.UserData connect(string login, string password, Ice.Current current__);

        BomberLoutreInterface.UserData createUser(string login, string password, Ice.Current current__);

        bool deleteUser(string login, Ice.Current current__);

        BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, Ice.Current current__);

        BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, Ice.Current current__);

        BomberLoutreInterface.GameData[] getGameList(Ice.Current current__);

        BomberLoutreInterface.UserData[] getUserList(Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ServerInterfaceOperationsNC_
    {
        BomberLoutreInterface.UserData connect(string login, string password);

        BomberLoutreInterface.UserData createUser(string login, string password);

        bool deleteUser(string login);

        BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo);

        BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo);

        BomberLoutreInterface.GameData[] getGameList();

        BomberLoutreInterface.UserData[] getUserList();
    }
}

namespace BomberLoutreInterface
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class UserDataListHelper
    {
        public static void write(IceInternal.BasicStream os__, BomberLoutreInterface.UserData[] v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Length);
                for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                {
                    (v__[ix__] == null ? new BomberLoutreInterface.UserData() : v__[ix__]).write__(os__);
                }
            }
        }

        public static BomberLoutreInterface.UserData[] read(IceInternal.BasicStream is__)
        {
            BomberLoutreInterface.UserData[] v__;
            {
                int szx__ = is__.readAndCheckSeqSize(25);
                v__ = new BomberLoutreInterface.UserData[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    v__[ix__] = new BomberLoutreInterface.UserData();
                    v__[ix__].read__(is__);
                }
            }
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameUserInterfacePrxHelper : Ice.ObjectPrxHelperBase, GameUserInterfacePrx
    {
        #region Synchronous operations

        public string getCreatorName()
        {
            return getCreatorName(null, false);
        }

        public string getCreatorName(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getCreatorName(context__, true);
        }

        private string getCreatorName(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getCreatorName");
                    delBase__ = getDelegate__(false);
                    GameUserInterfaceDel_ del__ = (GameUserInterfaceDel_)delBase__;
                    return del__.getCreatorName(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void leaveGame(BomberLoutreInterface.UserData u)
        {
            leaveGame(u, null, false);
        }

        public void leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            leaveGame(u, context__, true);
        }

        private void leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameUserInterfaceDel_ del__ = (GameUserInterfaceDel_)delBase__;
                    del__.leaveGame(u, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void userReady(BomberLoutreInterface.UserData u)
        {
            userReady(u, null, false);
        }

        public void userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            userReady(u, context__, true);
        }

        private void userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameUserInterfaceDel_ del__ = (GameUserInterfaceDel_)delBase__;
                    del__.userReady(u, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_getCreatorName> begin_getCreatorName()
        {
            return begin_getCreatorName(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_getCreatorName> begin_getCreatorName(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getCreatorName(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getCreatorName(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getCreatorName(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getCreatorName(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getCreatorName(ctx__, true, cb__, cookie__);
        }

        private const string __getCreatorName_name = "getCreatorName";

        public string end_getCreatorName(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getCreatorName_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_getCreatorName> begin_getCreatorName(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getCreatorName_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameUserInterface_getCreatorName> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameUserInterface_getCreatorName>(this, __getCreatorName_name, getCreatorName_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getCreatorName_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getCreatorName_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_GameUserInterface_getCreatorName cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_getCreatorName(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_leaveGame> begin_leaveGame(BomberLoutreInterface.UserData u)
        {
            return begin_leaveGame(u, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_leaveGame> begin_leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_leaveGame(u, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_leaveGame(BomberLoutreInterface.UserData u, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_leaveGame(u, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_leaveGame(u, ctx__, true, cb__, cookie__);
        }

        private const string __leaveGame_name = "leaveGame";

        public void end_leaveGame(Ice.AsyncResult r__)
        {
            end__(r__, __leaveGame_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_leaveGame> begin_leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameUserInterface_leaveGame> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameUserInterface_leaveGame>(this, __leaveGame_name, leaveGame_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__leaveGame_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(u == null)
                {
                    BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                    tmp__.write__(os__);
                }
                else
                {
                    u.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void leaveGame_completed__(BomberLoutreInterface.Callback_GameUserInterface_leaveGame cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_userReady> begin_userReady(BomberLoutreInterface.UserData u)
        {
            return begin_userReady(u, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_userReady> begin_userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_userReady(u, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_userReady(BomberLoutreInterface.UserData u, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_userReady(u, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_userReady(u, ctx__, true, cb__, cookie__);
        }

        private const string __userReady_name = "userReady";

        public void end_userReady(Ice.AsyncResult r__)
        {
            end__(r__, __userReady_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameUserInterface_userReady> begin_userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameUserInterface_userReady> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameUserInterface_userReady>(this, __userReady_name, userReady_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__userReady_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(u == null)
                {
                    BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                    tmp__.write__(os__);
                }
                else
                {
                    u.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void userReady_completed__(BomberLoutreInterface.Callback_GameUserInterface_userReady cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static GameUserInterfacePrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GameUserInterfacePrx r = b as GameUserInterfacePrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                GameUserInterfacePrxHelper h = new GameUserInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameUserInterfacePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            GameUserInterfacePrx r = b as GameUserInterfacePrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                GameUserInterfacePrxHelper h = new GameUserInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameUserInterfacePrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    GameUserInterfacePrxHelper h = new GameUserInterfacePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GameUserInterfacePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    GameUserInterfacePrxHelper h = new GameUserInterfacePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GameUserInterfacePrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GameUserInterfacePrx r = b as GameUserInterfacePrx;
            if(r == null)
            {
                GameUserInterfacePrxHelper h = new GameUserInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameUserInterfacePrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            GameUserInterfacePrxHelper h = new GameUserInterfacePrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::BomberLoutreInterface::GameUserInterface",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new GameUserInterfaceDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new GameUserInterfaceDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, GameUserInterfacePrx v__)
        {
            os__.writeProxy(v__);
        }

        public static GameUserInterfacePrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                GameUserInterfacePrxHelper result = new GameUserInterfacePrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameDataListHelper
    {
        public static void write(IceInternal.BasicStream os__, BomberLoutreInterface.GameData[] v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Length);
                for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                {
                    (v__[ix__] == null ? new BomberLoutreInterface.GameData() : v__[ix__]).write__(os__);
                }
            }
        }

        public static BomberLoutreInterface.GameData[] read(IceInternal.BasicStream is__)
        {
            BomberLoutreInterface.GameData[] v__;
            {
                int szx__ = is__.readAndCheckSeqSize(15);
                v__ = new BomberLoutreInterface.GameData[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    v__[ix__] = new BomberLoutreInterface.GameData();
                    v__[ix__].read__(is__);
                }
            }
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class MapNameListHelper
    {
        public static void write(IceInternal.BasicStream os__, string[] v__)
        {
            os__.writeStringSeq(v__);
        }

        public static string[] read(IceInternal.BasicStream is__)
        {
            string[] v__;
            v__ = is__.readStringSeq();
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameInterfacePrxHelper : Ice.ObjectPrxHelperBase, GameInterfacePrx
    {
        #region Synchronous operations

        public void addBot()
        {
            addBot(null, false);
        }

        public void addBot(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            addBot(context__, true);
        }

        private void addBot(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.addBot(context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string createMap(string mode, string mapSkin)
        {
            return createMap(mode, mapSkin, null, false);
        }

        public string createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return createMap(mode, mapSkin, context__, true);
        }

        private string createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("createMap");
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    return del__.createMap(mode, mapSkin, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void endMap()
        {
            endMap(null, false);
        }

        public void endMap(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            endMap(context__, true);
        }

        private void endMap(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.endMap(context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string[] getMapList()
        {
            return getMapList(null, false);
        }

        public string[] getMapList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getMapList(context__, true);
        }

        private string[] getMapList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getMapList");
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    return del__.getMapList(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string getName()
        {
            return getName(null, false);
        }

        public string getName(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getName(context__, true);
        }

        private string getName(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getName");
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    return del__.getName(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public int getRoundCount()
        {
            return getRoundCount(null, false);
        }

        public int getRoundCount(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getRoundCount(context__, true);
        }

        private int getRoundCount(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getRoundCount");
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    return del__.getRoundCount(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public int getState()
        {
            return getState(null, false);
        }

        public int getState(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getState(context__, true);
        }

        private int getState(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getState");
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    return del__.getState(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void invitePlayer(string username)
        {
            invitePlayer(username, null, false);
        }

        public void invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            invitePlayer(username, context__, true);
        }

        private void invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.invitePlayer(username, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void kickPlayer(string username)
        {
            kickPlayer(username, null, false);
        }

        public void kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            kickPlayer(username, context__, true);
        }

        private void kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.kickPlayer(username, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void removeBot()
        {
            removeBot(null, false);
        }

        public void removeBot(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            removeBot(context__, true);
        }

        private void removeBot(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.removeBot(context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public bool removeGame()
        {
            return removeGame(null, false);
        }

        public bool removeGame(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return removeGame(context__, true);
        }

        private bool removeGame(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("removeGame");
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    return del__.removeGame(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void setName(string newname)
        {
            setName(newname, null, false);
        }

        public void setName(string newname, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            setName(newname, context__, true);
        }

        private void setName(string newname, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.setName(newname, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void setRoundCount(int newcount)
        {
            setRoundCount(newcount, null, false);
        }

        public void setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            setRoundCount(newcount, context__, true);
        }

        private void setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.setRoundCount(newcount, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void setState(int newstate)
        {
            setState(newstate, null, false);
        }

        public void setState(int newstate, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            setState(newstate, context__, true);
        }

        private void setState(int newstate, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.setState(newstate, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void startMap()
        {
            startMap(null, false);
        }

        public void startMap(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            startMap(context__, true);
        }

        private void startMap(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameInterfaceDel_ del__ = (GameInterfaceDel_)delBase__;
                    del__.startMap(context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_addBot> begin_addBot()
        {
            return begin_addBot(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_addBot> begin_addBot(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addBot(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_addBot(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addBot(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addBot(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addBot(ctx__, true, cb__, cookie__);
        }

        private const string __addBot_name = "addBot";

        public void end_addBot(Ice.AsyncResult r__)
        {
            end__(r__, __addBot_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_addBot> begin_addBot(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_addBot> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_addBot>(this, __addBot_name, addBot_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__addBot_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void addBot_completed__(BomberLoutreInterface.Callback_GameInterface_addBot cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_createMap> begin_createMap(string mode, string mapSkin)
        {
            return begin_createMap(mode, mapSkin, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_createMap> begin_createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_createMap(mode, mapSkin, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_createMap(string mode, string mapSkin, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_createMap(mode, mapSkin, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_createMap(mode, mapSkin, ctx__, true, cb__, cookie__);
        }

        private const string __createMap_name = "createMap";

        public string end_createMap(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __createMap_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_createMap> begin_createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__createMap_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_createMap> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_createMap>(this, __createMap_name, createMap_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__createMap_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(mode);
                os__.writeString(mapSkin);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void createMap_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_GameInterface_createMap cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_createMap(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_endMap> begin_endMap()
        {
            return begin_endMap(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_endMap> begin_endMap(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_endMap(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_endMap(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_endMap(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_endMap(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_endMap(ctx__, true, cb__, cookie__);
        }

        private const string __endMap_name = "endMap";

        public void end_endMap(Ice.AsyncResult r__)
        {
            end__(r__, __endMap_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_endMap> begin_endMap(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_endMap> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_endMap>(this, __endMap_name, endMap_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__endMap_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void endMap_completed__(BomberLoutreInterface.Callback_GameInterface_endMap cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getMapList> begin_getMapList()
        {
            return begin_getMapList(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getMapList> begin_getMapList(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getMapList(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getMapList(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getMapList(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getMapList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getMapList(ctx__, true, cb__, cookie__);
        }

        private const string __getMapList_name = "getMapList";

        public string[] end_getMapList(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getMapList_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string[] ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readStringSeq();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getMapList> begin_getMapList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getMapList_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_getMapList> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_getMapList>(this, __getMapList_name, getMapList_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getMapList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getMapList_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_GameInterface_getMapList cb__, Ice.ExceptionCallback excb__)
        {
            string[] ret__;
            try
            {
                ret__ = end_getMapList(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getName> begin_getName()
        {
            return begin_getName(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getName> begin_getName(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getName(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getName(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getName(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getName(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getName(ctx__, true, cb__, cookie__);
        }

        private const string __getName_name = "getName";

        public string end_getName(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getName_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getName> begin_getName(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getName_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_getName> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_getName>(this, __getName_name, getName_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getName_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getName_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_GameInterface_getName cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_getName(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getRoundCount> begin_getRoundCount()
        {
            return begin_getRoundCount(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getRoundCount> begin_getRoundCount(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getRoundCount(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getRoundCount(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getRoundCount(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getRoundCount(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getRoundCount(ctx__, true, cb__, cookie__);
        }

        private const string __getRoundCount_name = "getRoundCount";

        public int end_getRoundCount(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getRoundCount_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            int ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readInt();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getRoundCount> begin_getRoundCount(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getRoundCount_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_getRoundCount> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_getRoundCount>(this, __getRoundCount_name, getRoundCount_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getRoundCount_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getRoundCount_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_GameInterface_getRoundCount cb__, Ice.ExceptionCallback excb__)
        {
            int ret__;
            try
            {
                ret__ = end_getRoundCount(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getState> begin_getState()
        {
            return begin_getState(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getState> begin_getState(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getState(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getState(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getState(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getState(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getState(ctx__, true, cb__, cookie__);
        }

        private const string __getState_name = "getState";

        public int end_getState(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getState_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            int ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readInt();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_getState> begin_getState(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getState_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_getState> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_getState>(this, __getState_name, getState_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getState_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getState_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_GameInterface_getState cb__, Ice.ExceptionCallback excb__)
        {
            int ret__;
            try
            {
                ret__ = end_getState(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_invitePlayer> begin_invitePlayer(string username)
        {
            return begin_invitePlayer(username, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_invitePlayer> begin_invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_invitePlayer(username, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_invitePlayer(string username, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_invitePlayer(username, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_invitePlayer(username, ctx__, true, cb__, cookie__);
        }

        private const string __invitePlayer_name = "invitePlayer";

        public void end_invitePlayer(Ice.AsyncResult r__)
        {
            end__(r__, __invitePlayer_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_invitePlayer> begin_invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_invitePlayer> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_invitePlayer>(this, __invitePlayer_name, invitePlayer_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__invitePlayer_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(username);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void invitePlayer_completed__(BomberLoutreInterface.Callback_GameInterface_invitePlayer cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_kickPlayer> begin_kickPlayer(string username)
        {
            return begin_kickPlayer(username, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_kickPlayer> begin_kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_kickPlayer(username, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_kickPlayer(string username, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_kickPlayer(username, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_kickPlayer(username, ctx__, true, cb__, cookie__);
        }

        private const string __kickPlayer_name = "kickPlayer";

        public void end_kickPlayer(Ice.AsyncResult r__)
        {
            end__(r__, __kickPlayer_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_kickPlayer> begin_kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_kickPlayer> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_kickPlayer>(this, __kickPlayer_name, kickPlayer_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__kickPlayer_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(username);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void kickPlayer_completed__(BomberLoutreInterface.Callback_GameInterface_kickPlayer cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeBot> begin_removeBot()
        {
            return begin_removeBot(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeBot> begin_removeBot(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_removeBot(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_removeBot(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_removeBot(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_removeBot(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_removeBot(ctx__, true, cb__, cookie__);
        }

        private const string __removeBot_name = "removeBot";

        public void end_removeBot(Ice.AsyncResult r__)
        {
            end__(r__, __removeBot_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeBot> begin_removeBot(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_removeBot> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_removeBot>(this, __removeBot_name, removeBot_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__removeBot_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void removeBot_completed__(BomberLoutreInterface.Callback_GameInterface_removeBot cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeGame> begin_removeGame()
        {
            return begin_removeGame(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeGame> begin_removeGame(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_removeGame(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_removeGame(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_removeGame(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_removeGame(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_removeGame(ctx__, true, cb__, cookie__);
        }

        private const string __removeGame_name = "removeGame";

        public bool end_removeGame(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __removeGame_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            bool ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readBool();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_removeGame> begin_removeGame(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__removeGame_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_removeGame> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_removeGame>(this, __removeGame_name, removeGame_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__removeGame_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void removeGame_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_GameInterface_removeGame cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_removeGame(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setName> begin_setName(string newname)
        {
            return begin_setName(newname, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setName> begin_setName(string newname, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_setName(newname, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_setName(string newname, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_setName(newname, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_setName(string newname, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_setName(newname, ctx__, true, cb__, cookie__);
        }

        private const string __setName_name = "setName";

        public void end_setName(Ice.AsyncResult r__)
        {
            end__(r__, __setName_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setName> begin_setName(string newname, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_setName> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_setName>(this, __setName_name, setName_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__setName_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(newname);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void setName_completed__(BomberLoutreInterface.Callback_GameInterface_setName cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setRoundCount> begin_setRoundCount(int newcount)
        {
            return begin_setRoundCount(newcount, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setRoundCount> begin_setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_setRoundCount(newcount, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_setRoundCount(int newcount, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_setRoundCount(newcount, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_setRoundCount(newcount, ctx__, true, cb__, cookie__);
        }

        private const string __setRoundCount_name = "setRoundCount";

        public void end_setRoundCount(Ice.AsyncResult r__)
        {
            end__(r__, __setRoundCount_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setRoundCount> begin_setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_setRoundCount> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_setRoundCount>(this, __setRoundCount_name, setRoundCount_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__setRoundCount_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeInt(newcount);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void setRoundCount_completed__(BomberLoutreInterface.Callback_GameInterface_setRoundCount cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setState> begin_setState(int newstate)
        {
            return begin_setState(newstate, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setState> begin_setState(int newstate, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_setState(newstate, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_setState(int newstate, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_setState(newstate, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_setState(int newstate, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_setState(newstate, ctx__, true, cb__, cookie__);
        }

        private const string __setState_name = "setState";

        public void end_setState(Ice.AsyncResult r__)
        {
            end__(r__, __setState_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_setState> begin_setState(int newstate, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_setState> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_setState>(this, __setState_name, setState_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__setState_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeInt(newstate);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void setState_completed__(BomberLoutreInterface.Callback_GameInterface_setState cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_startMap> begin_startMap()
        {
            return begin_startMap(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_startMap> begin_startMap(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_startMap(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_startMap(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_startMap(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_startMap(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_startMap(ctx__, true, cb__, cookie__);
        }

        private const string __startMap_name = "startMap";

        public void end_startMap(Ice.AsyncResult r__)
        {
            end__(r__, __startMap_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameInterface_startMap> begin_startMap(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_startMap> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameInterface_startMap>(this, __startMap_name, startMap_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__startMap_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void startMap_completed__(BomberLoutreInterface.Callback_GameInterface_startMap cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static GameInterfacePrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GameInterfacePrx r = b as GameInterfacePrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                GameInterfacePrxHelper h = new GameInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameInterfacePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            GameInterfacePrx r = b as GameInterfacePrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                GameInterfacePrxHelper h = new GameInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameInterfacePrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    GameInterfacePrxHelper h = new GameInterfacePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GameInterfacePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    GameInterfacePrxHelper h = new GameInterfacePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GameInterfacePrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GameInterfacePrx r = b as GameInterfacePrx;
            if(r == null)
            {
                GameInterfacePrxHelper h = new GameInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameInterfacePrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            GameInterfacePrxHelper h = new GameInterfacePrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::BomberLoutreInterface::GameInterface",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new GameInterfaceDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new GameInterfaceDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, GameInterfacePrx v__)
        {
            os__.writeProxy(v__);
        }

        public static GameInterfacePrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                GameInterfacePrxHelper result = new GameInterfacePrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameWaitRoomPrxHelper : Ice.ObjectPrxHelperBase, GameWaitRoomPrx
    {
        #region Synchronous operations

        public void allUsersReady()
        {
            allUsersReady(null, false);
        }

        public void allUsersReady(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            allUsersReady(context__, true);
        }

        private void allUsersReady(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameWaitRoomDel_ del__ = (GameWaitRoomDel_)delBase__;
                    del__.allUsersReady(context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void gameDataUpdated(BomberLoutreInterface.GameData g)
        {
            gameDataUpdated(g, null, false);
        }

        public void gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            gameDataUpdated(g, context__, true);
        }

        private void gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameWaitRoomDel_ del__ = (GameWaitRoomDel_)delBase__;
                    del__.gameDataUpdated(g, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void gameEnd()
        {
            gameEnd(null, false);
        }

        public void gameEnd(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            gameEnd(context__, true);
        }

        private void gameEnd(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameWaitRoomDel_ del__ = (GameWaitRoomDel_)delBase__;
                    del__.gameEnd(context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void gameStart()
        {
            gameStart(null, false);
        }

        public void gameStart(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            gameStart(context__, true);
        }

        private void gameStart(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameWaitRoomDel_ del__ = (GameWaitRoomDel_)delBase__;
                    del__.gameStart(context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void newMapDefined(string map)
        {
            newMapDefined(map, null, false);
        }

        public void newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            newMapDefined(map, context__, true);
        }

        private void newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameWaitRoomDel_ del__ = (GameWaitRoomDel_)delBase__;
                    del__.newMapDefined(map, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void newUserInRoom(string username)
        {
            newUserInRoom(username, null, false);
        }

        public void newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            newUserInRoom(username, context__, true);
        }

        private void newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameWaitRoomDel_ del__ = (GameWaitRoomDel_)delBase__;
                    del__.newUserInRoom(username, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void userLeftRoom(string username)
        {
            userLeftRoom(username, null, false);
        }

        public void userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            userLeftRoom(username, context__, true);
        }

        private void userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameWaitRoomDel_ del__ = (GameWaitRoomDel_)delBase__;
                    del__.userLeftRoom(username, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void userReady(string username)
        {
            userReady(username, null, false);
        }

        public void userReady(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            userReady(username, context__, true);
        }

        private void userReady(string username, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    GameWaitRoomDel_ del__ = (GameWaitRoomDel_)delBase__;
                    del__.userReady(username, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_allUsersReady> begin_allUsersReady()
        {
            return begin_allUsersReady(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_allUsersReady> begin_allUsersReady(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_allUsersReady(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_allUsersReady(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_allUsersReady(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_allUsersReady(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_allUsersReady(ctx__, true, cb__, cookie__);
        }

        private const string __allUsersReady_name = "allUsersReady";

        public void end_allUsersReady(Ice.AsyncResult r__)
        {
            end__(r__, __allUsersReady_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_allUsersReady> begin_allUsersReady(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_allUsersReady> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_allUsersReady>(this, __allUsersReady_name, allUsersReady_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__allUsersReady_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void allUsersReady_completed__(BomberLoutreInterface.Callback_GameWaitRoom_allUsersReady cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameDataUpdated> begin_gameDataUpdated(BomberLoutreInterface.GameData g)
        {
            return begin_gameDataUpdated(g, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameDataUpdated> begin_gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_gameDataUpdated(g, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_gameDataUpdated(BomberLoutreInterface.GameData g, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_gameDataUpdated(g, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_gameDataUpdated(g, ctx__, true, cb__, cookie__);
        }

        private const string __gameDataUpdated_name = "gameDataUpdated";

        public void end_gameDataUpdated(Ice.AsyncResult r__)
        {
            end__(r__, __gameDataUpdated_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameDataUpdated> begin_gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_gameDataUpdated> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_gameDataUpdated>(this, __gameDataUpdated_name, gameDataUpdated_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__gameDataUpdated_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(g == null)
                {
                    BomberLoutreInterface.GameData tmp__ = new BomberLoutreInterface.GameData();
                    tmp__.write__(os__);
                }
                else
                {
                    g.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void gameDataUpdated_completed__(BomberLoutreInterface.Callback_GameWaitRoom_gameDataUpdated cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameEnd> begin_gameEnd()
        {
            return begin_gameEnd(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameEnd> begin_gameEnd(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_gameEnd(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_gameEnd(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_gameEnd(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_gameEnd(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_gameEnd(ctx__, true, cb__, cookie__);
        }

        private const string __gameEnd_name = "gameEnd";

        public void end_gameEnd(Ice.AsyncResult r__)
        {
            end__(r__, __gameEnd_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameEnd> begin_gameEnd(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_gameEnd> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_gameEnd>(this, __gameEnd_name, gameEnd_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__gameEnd_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void gameEnd_completed__(BomberLoutreInterface.Callback_GameWaitRoom_gameEnd cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameStart> begin_gameStart()
        {
            return begin_gameStart(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameStart> begin_gameStart(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_gameStart(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_gameStart(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_gameStart(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_gameStart(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_gameStart(ctx__, true, cb__, cookie__);
        }

        private const string __gameStart_name = "gameStart";

        public void end_gameStart(Ice.AsyncResult r__)
        {
            end__(r__, __gameStart_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_gameStart> begin_gameStart(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_gameStart> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_gameStart>(this, __gameStart_name, gameStart_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__gameStart_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void gameStart_completed__(BomberLoutreInterface.Callback_GameWaitRoom_gameStart cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newMapDefined> begin_newMapDefined(string map)
        {
            return begin_newMapDefined(map, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newMapDefined> begin_newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_newMapDefined(map, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_newMapDefined(string map, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_newMapDefined(map, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_newMapDefined(map, ctx__, true, cb__, cookie__);
        }

        private const string __newMapDefined_name = "newMapDefined";

        public void end_newMapDefined(Ice.AsyncResult r__)
        {
            end__(r__, __newMapDefined_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newMapDefined> begin_newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_newMapDefined> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_newMapDefined>(this, __newMapDefined_name, newMapDefined_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__newMapDefined_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(map);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void newMapDefined_completed__(BomberLoutreInterface.Callback_GameWaitRoom_newMapDefined cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newUserInRoom> begin_newUserInRoom(string username)
        {
            return begin_newUserInRoom(username, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newUserInRoom> begin_newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_newUserInRoom(username, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_newUserInRoom(string username, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_newUserInRoom(username, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_newUserInRoom(username, ctx__, true, cb__, cookie__);
        }

        private const string __newUserInRoom_name = "newUserInRoom";

        public void end_newUserInRoom(Ice.AsyncResult r__)
        {
            end__(r__, __newUserInRoom_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_newUserInRoom> begin_newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_newUserInRoom> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_newUserInRoom>(this, __newUserInRoom_name, newUserInRoom_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__newUserInRoom_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(username);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void newUserInRoom_completed__(BomberLoutreInterface.Callback_GameWaitRoom_newUserInRoom cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userLeftRoom> begin_userLeftRoom(string username)
        {
            return begin_userLeftRoom(username, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userLeftRoom> begin_userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_userLeftRoom(username, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_userLeftRoom(string username, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_userLeftRoom(username, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_userLeftRoom(username, ctx__, true, cb__, cookie__);
        }

        private const string __userLeftRoom_name = "userLeftRoom";

        public void end_userLeftRoom(Ice.AsyncResult r__)
        {
            end__(r__, __userLeftRoom_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userLeftRoom> begin_userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_userLeftRoom> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_userLeftRoom>(this, __userLeftRoom_name, userLeftRoom_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__userLeftRoom_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(username);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void userLeftRoom_completed__(BomberLoutreInterface.Callback_GameWaitRoom_userLeftRoom cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userReady> begin_userReady(string username)
        {
            return begin_userReady(username, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userReady> begin_userReady(string username, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_userReady(username, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_userReady(string username, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_userReady(username, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_userReady(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_userReady(username, ctx__, true, cb__, cookie__);
        }

        private const string __userReady_name = "userReady";

        public void end_userReady(Ice.AsyncResult r__)
        {
            end__(r__, __userReady_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_GameWaitRoom_userReady> begin_userReady(string username, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_userReady> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_GameWaitRoom_userReady>(this, __userReady_name, userReady_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__userReady_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(username);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void userReady_completed__(BomberLoutreInterface.Callback_GameWaitRoom_userReady cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static GameWaitRoomPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GameWaitRoomPrx r = b as GameWaitRoomPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                GameWaitRoomPrxHelper h = new GameWaitRoomPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameWaitRoomPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            GameWaitRoomPrx r = b as GameWaitRoomPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                GameWaitRoomPrxHelper h = new GameWaitRoomPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameWaitRoomPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    GameWaitRoomPrxHelper h = new GameWaitRoomPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GameWaitRoomPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    GameWaitRoomPrxHelper h = new GameWaitRoomPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GameWaitRoomPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GameWaitRoomPrx r = b as GameWaitRoomPrx;
            if(r == null)
            {
                GameWaitRoomPrxHelper h = new GameWaitRoomPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GameWaitRoomPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            GameWaitRoomPrxHelper h = new GameWaitRoomPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::BomberLoutreInterface::GameWaitRoom",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new GameWaitRoomDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new GameWaitRoomDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, GameWaitRoomPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static GameWaitRoomPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                GameWaitRoomPrxHelper result = new GameWaitRoomPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class PlayerListHelper
    {
        public static void write(IceInternal.BasicStream os__, BomberLoutreInterface.Player[] v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Length);
                for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                {
                    (v__[ix__] == null ? new BomberLoutreInterface.Player() : v__[ix__]).write__(os__);
                }
            }
        }

        public static BomberLoutreInterface.Player[] read(IceInternal.BasicStream is__)
        {
            BomberLoutreInterface.Player[] v__;
            {
                int szx__ = is__.readAndCheckSeqSize(53);
                v__ = new BomberLoutreInterface.Player[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    v__[ix__] = new BomberLoutreInterface.Player();
                    v__[ix__].read__(is__);
                }
            }
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class MapInterfacePrxHelper : Ice.ObjectPrxHelperBase, MapInterfacePrx
    {
        #region Synchronous operations

        public void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b)
        {
            dropBomb(p, b, null, false);
        }

        public void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            dropBomb(p, b, context__, true);
        }

        private void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapInterfaceDel_ del__ = (MapInterfaceDel_)delBase__;
                    del__.dropBomb(p, b, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public int getHeight()
        {
            return getHeight(null, false);
        }

        public int getHeight(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getHeight(context__, true);
        }

        private int getHeight(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getHeight");
                    delBase__ = getDelegate__(false);
                    MapInterfaceDel_ del__ = (MapInterfaceDel_)delBase__;
                    return del__.getHeight(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string getId()
        {
            return getId(null, false);
        }

        public string getId(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getId(context__, true);
        }

        private string getId(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getId");
                    delBase__ = getDelegate__(false);
                    MapInterfaceDel_ del__ = (MapInterfaceDel_)delBase__;
                    return del__.getId(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public int getWidth()
        {
            return getWidth(null, false);
        }

        public int getWidth(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getWidth(context__, true);
        }

        private int getWidth(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getWidth");
                    delBase__ = getDelegate__(false);
                    MapInterfaceDel_ del__ = (MapInterfaceDel_)delBase__;
                    return del__.getWidth(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void moveDown(BomberLoutreInterface.Player p)
        {
            moveDown(p, null, false);
        }

        public void moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            moveDown(p, context__, true);
        }

        private void moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapInterfaceDel_ del__ = (MapInterfaceDel_)delBase__;
                    del__.moveDown(p, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void moveLeft(BomberLoutreInterface.Player p)
        {
            moveLeft(p, null, false);
        }

        public void moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            moveLeft(p, context__, true);
        }

        private void moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapInterfaceDel_ del__ = (MapInterfaceDel_)delBase__;
                    del__.moveLeft(p, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void moveRight(BomberLoutreInterface.Player p)
        {
            moveRight(p, null, false);
        }

        public void moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            moveRight(p, context__, true);
        }

        private void moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapInterfaceDel_ del__ = (MapInterfaceDel_)delBase__;
                    del__.moveRight(p, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void moveUp(BomberLoutreInterface.Player p)
        {
            moveUp(p, null, false);
        }

        public void moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            moveUp(p, context__, true);
        }

        private void moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapInterfaceDel_ del__ = (MapInterfaceDel_)delBase__;
                    del__.moveUp(p, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_dropBomb> begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b)
        {
            return begin_dropBomb(p, b, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_dropBomb> begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_dropBomb(p, b, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_dropBomb(p, b, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_dropBomb(p, b, ctx__, true, cb__, cookie__);
        }

        private const string __dropBomb_name = "dropBomb";

        public void end_dropBomb(Ice.AsyncResult r__)
        {
            end__(r__, __dropBomb_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_dropBomb> begin_dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_dropBomb> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_dropBomb>(this, __dropBomb_name, dropBomb_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__dropBomb_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(p == null)
                {
                    BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                    tmp__.write__(os__);
                }
                else
                {
                    p.write__(os__);
                }
                b.write__(os__);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void dropBomb_completed__(BomberLoutreInterface.Callback_MapInterface_dropBomb cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getHeight> begin_getHeight()
        {
            return begin_getHeight(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getHeight> begin_getHeight(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getHeight(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getHeight(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getHeight(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getHeight(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getHeight(ctx__, true, cb__, cookie__);
        }

        private const string __getHeight_name = "getHeight";

        public int end_getHeight(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getHeight_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            int ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readInt();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getHeight> begin_getHeight(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getHeight_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_getHeight> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_getHeight>(this, __getHeight_name, getHeight_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getHeight_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getHeight_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_MapInterface_getHeight cb__, Ice.ExceptionCallback excb__)
        {
            int ret__;
            try
            {
                ret__ = end_getHeight(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getId> begin_getId()
        {
            return begin_getId(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getId> begin_getId(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getId(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getId(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getId(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getId(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getId(ctx__, true, cb__, cookie__);
        }

        private const string __getId_name = "getId";

        public string end_getId(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getId_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getId> begin_getId(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getId_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_getId> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_getId>(this, __getId_name, getId_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getId_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getId_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_MapInterface_getId cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_getId(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getWidth> begin_getWidth()
        {
            return begin_getWidth(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getWidth> begin_getWidth(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getWidth(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getWidth(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getWidth(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getWidth(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getWidth(ctx__, true, cb__, cookie__);
        }

        private const string __getWidth_name = "getWidth";

        public int end_getWidth(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getWidth_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            int ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readInt();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_getWidth> begin_getWidth(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getWidth_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_getWidth> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_getWidth>(this, __getWidth_name, getWidth_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getWidth_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getWidth_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_MapInterface_getWidth cb__, Ice.ExceptionCallback excb__)
        {
            int ret__;
            try
            {
                ret__ = end_getWidth(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveDown> begin_moveDown(BomberLoutreInterface.Player p)
        {
            return begin_moveDown(p, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveDown> begin_moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_moveDown(p, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_moveDown(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveDown(p, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveDown(p, ctx__, true, cb__, cookie__);
        }

        private const string __moveDown_name = "moveDown";

        public void end_moveDown(Ice.AsyncResult r__)
        {
            end__(r__, __moveDown_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveDown> begin_moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_moveDown> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_moveDown>(this, __moveDown_name, moveDown_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__moveDown_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(p == null)
                {
                    BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                    tmp__.write__(os__);
                }
                else
                {
                    p.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void moveDown_completed__(BomberLoutreInterface.Callback_MapInterface_moveDown cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveLeft> begin_moveLeft(BomberLoutreInterface.Player p)
        {
            return begin_moveLeft(p, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveLeft> begin_moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_moveLeft(p, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_moveLeft(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveLeft(p, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveLeft(p, ctx__, true, cb__, cookie__);
        }

        private const string __moveLeft_name = "moveLeft";

        public void end_moveLeft(Ice.AsyncResult r__)
        {
            end__(r__, __moveLeft_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveLeft> begin_moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_moveLeft> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_moveLeft>(this, __moveLeft_name, moveLeft_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__moveLeft_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(p == null)
                {
                    BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                    tmp__.write__(os__);
                }
                else
                {
                    p.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void moveLeft_completed__(BomberLoutreInterface.Callback_MapInterface_moveLeft cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveRight> begin_moveRight(BomberLoutreInterface.Player p)
        {
            return begin_moveRight(p, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveRight> begin_moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_moveRight(p, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_moveRight(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveRight(p, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveRight(p, ctx__, true, cb__, cookie__);
        }

        private const string __moveRight_name = "moveRight";

        public void end_moveRight(Ice.AsyncResult r__)
        {
            end__(r__, __moveRight_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveRight> begin_moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_moveRight> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_moveRight>(this, __moveRight_name, moveRight_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__moveRight_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(p == null)
                {
                    BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                    tmp__.write__(os__);
                }
                else
                {
                    p.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void moveRight_completed__(BomberLoutreInterface.Callback_MapInterface_moveRight cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveUp> begin_moveUp(BomberLoutreInterface.Player p)
        {
            return begin_moveUp(p, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveUp> begin_moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_moveUp(p, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_moveUp(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveUp(p, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveUp(p, ctx__, true, cb__, cookie__);
        }

        private const string __moveUp_name = "moveUp";

        public void end_moveUp(Ice.AsyncResult r__)
        {
            end__(r__, __moveUp_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapInterface_moveUp> begin_moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_moveUp> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapInterface_moveUp>(this, __moveUp_name, moveUp_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__moveUp_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(p == null)
                {
                    BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                    tmp__.write__(os__);
                }
                else
                {
                    p.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void moveUp_completed__(BomberLoutreInterface.Callback_MapInterface_moveUp cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static MapInterfacePrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            MapInterfacePrx r = b as MapInterfacePrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                MapInterfacePrxHelper h = new MapInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MapInterfacePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            MapInterfacePrx r = b as MapInterfacePrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                MapInterfacePrxHelper h = new MapInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MapInterfacePrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    MapInterfacePrxHelper h = new MapInterfacePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static MapInterfacePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    MapInterfacePrxHelper h = new MapInterfacePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static MapInterfacePrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            MapInterfacePrx r = b as MapInterfacePrx;
            if(r == null)
            {
                MapInterfacePrxHelper h = new MapInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MapInterfacePrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            MapInterfacePrxHelper h = new MapInterfacePrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::BomberLoutreInterface::MapInterface",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new MapInterfaceDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new MapInterfaceDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, MapInterfacePrx v__)
        {
            os__.writeProxy(v__);
        }

        public static MapInterfacePrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                MapInterfacePrxHelper result = new MapInterfacePrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class MapObserverPrxHelper : Ice.ObjectPrxHelperBase, MapObserverPrx
    {
        #region Synchronous operations

        public void bombExploded(BomberLoutreInterface.Bomb b)
        {
            bombExploded(b, null, false);
        }

        public void bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            bombExploded(b, context__, true);
        }

        private void bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapObserverDel_ del__ = (MapObserverDel_)delBase__;
                    del__.bombExploded(b, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void bombHasBeenPlanted(BomberLoutreInterface.Bomb b)
        {
            bombHasBeenPlanted(b, null, false);
        }

        public void bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            bombHasBeenPlanted(b, context__, true);
        }

        private void bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapObserverDel_ del__ = (MapObserverDel_)delBase__;
                    del__.bombHasBeenPlanted(b, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest)
        {
            bombKicked(b, dest, null, false);
        }

        public void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            bombKicked(b, dest, context__, true);
        }

        private void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapObserverDel_ del__ = (MapObserverDel_)delBase__;
                    del__.bombKicked(b, dest, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void bonusesDropped(BomberLoutreInterface.Bonus[] b)
        {
            bonusesDropped(b, null, false);
        }

        public void bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            bonusesDropped(b, context__, true);
        }

        private void bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapObserverDel_ del__ = (MapObserverDel_)delBase__;
                    del__.bonusesDropped(b, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void playerDied(BomberLoutreInterface.Player p)
        {
            playerDied(p, null, false);
        }

        public void playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            playerDied(p, context__, true);
        }

        private void playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapObserverDel_ del__ = (MapObserverDel_)delBase__;
                    del__.playerDied(p, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void refreshMapItems(BomberLoutreInterface.MapItem[] mi)
        {
            refreshMapItems(mi, null, false);
        }

        public void refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            refreshMapItems(mi, context__, true);
        }

        private void refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapObserverDel_ del__ = (MapObserverDel_)delBase__;
                    del__.refreshMapItems(mi, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void refreshPlayers(BomberLoutreInterface.Player[] p)
        {
            refreshPlayers(p, null, false);
        }

        public void refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            refreshPlayers(p, context__, true);
        }

        private void refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    MapObserverDel_ del__ = (MapObserverDel_)delBase__;
                    del__.refreshPlayers(p, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombExploded> begin_bombExploded(BomberLoutreInterface.Bomb b)
        {
            return begin_bombExploded(b, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombExploded> begin_bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_bombExploded(b, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_bombExploded(BomberLoutreInterface.Bomb b, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_bombExploded(b, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_bombExploded(b, ctx__, true, cb__, cookie__);
        }

        private const string __bombExploded_name = "bombExploded";

        public void end_bombExploded(Ice.AsyncResult r__)
        {
            end__(r__, __bombExploded_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombExploded> begin_bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_bombExploded> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_bombExploded>(this, __bombExploded_name, bombExploded_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__bombExploded_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                b.write__(os__);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void bombExploded_completed__(BomberLoutreInterface.Callback_MapObserver_bombExploded cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombHasBeenPlanted> begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b)
        {
            return begin_bombHasBeenPlanted(b, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombHasBeenPlanted> begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_bombHasBeenPlanted(b, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_bombHasBeenPlanted(b, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_bombHasBeenPlanted(b, ctx__, true, cb__, cookie__);
        }

        private const string __bombHasBeenPlanted_name = "bombHasBeenPlanted";

        public void end_bombHasBeenPlanted(Ice.AsyncResult r__)
        {
            end__(r__, __bombHasBeenPlanted_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombHasBeenPlanted> begin_bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_bombHasBeenPlanted> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_bombHasBeenPlanted>(this, __bombHasBeenPlanted_name, bombHasBeenPlanted_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__bombHasBeenPlanted_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                b.write__(os__);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void bombHasBeenPlanted_completed__(BomberLoutreInterface.Callback_MapObserver_bombHasBeenPlanted cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombKicked> begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest)
        {
            return begin_bombKicked(b, dest, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombKicked> begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_bombKicked(b, dest, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_bombKicked(b, dest, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_bombKicked(b, dest, ctx__, true, cb__, cookie__);
        }

        private const string __bombKicked_name = "bombKicked";

        public void end_bombKicked(Ice.AsyncResult r__)
        {
            end__(r__, __bombKicked_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bombKicked> begin_bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_bombKicked> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_bombKicked>(this, __bombKicked_name, bombKicked_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__bombKicked_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                b.write__(os__);
                dest.write__(os__);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void bombKicked_completed__(BomberLoutreInterface.Callback_MapObserver_bombKicked cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bonusesDropped> begin_bonusesDropped(BomberLoutreInterface.Bonus[] b)
        {
            return begin_bonusesDropped(b, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bonusesDropped> begin_bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_bonusesDropped(b, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_bonusesDropped(BomberLoutreInterface.Bonus[] b, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_bonusesDropped(b, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_bonusesDropped(b, ctx__, true, cb__, cookie__);
        }

        private const string __bonusesDropped_name = "bonusesDropped";

        public void end_bonusesDropped(Ice.AsyncResult r__)
        {
            end__(r__, __bonusesDropped_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_bonusesDropped> begin_bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_bonusesDropped> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_bonusesDropped>(this, __bonusesDropped_name, bonusesDropped_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__bonusesDropped_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(b == null)
                {
                    os__.writeSize(0);
                }
                else
                {
                    os__.writeSize(b.Length);
                    for(int ix__ = 0; ix__ < b.Length; ++ix__)
                    {
                        b[ix__].write__(os__);
                    }
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void bonusesDropped_completed__(BomberLoutreInterface.Callback_MapObserver_bonusesDropped cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_playerDied> begin_playerDied(BomberLoutreInterface.Player p)
        {
            return begin_playerDied(p, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_playerDied> begin_playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_playerDied(p, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_playerDied(BomberLoutreInterface.Player p, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_playerDied(p, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_playerDied(p, ctx__, true, cb__, cookie__);
        }

        private const string __playerDied_name = "playerDied";

        public void end_playerDied(Ice.AsyncResult r__)
        {
            end__(r__, __playerDied_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_playerDied> begin_playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_playerDied> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_playerDied>(this, __playerDied_name, playerDied_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__playerDied_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(p == null)
                {
                    BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                    tmp__.write__(os__);
                }
                else
                {
                    p.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void playerDied_completed__(BomberLoutreInterface.Callback_MapObserver_playerDied cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshMapItems> begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi)
        {
            return begin_refreshMapItems(mi, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshMapItems> begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_refreshMapItems(mi, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_refreshMapItems(mi, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_refreshMapItems(mi, ctx__, true, cb__, cookie__);
        }

        private const string __refreshMapItems_name = "refreshMapItems";

        public void end_refreshMapItems(Ice.AsyncResult r__)
        {
            end__(r__, __refreshMapItems_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshMapItems> begin_refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_refreshMapItems> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_refreshMapItems>(this, __refreshMapItems_name, refreshMapItems_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__refreshMapItems_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(mi == null)
                {
                    os__.writeSize(0);
                }
                else
                {
                    os__.writeSize(mi.Length);
                    for(int ix__ = 0; ix__ < mi.Length; ++ix__)
                    {
                        mi[ix__].write__(os__);
                    }
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void refreshMapItems_completed__(BomberLoutreInterface.Callback_MapObserver_refreshMapItems cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshPlayers> begin_refreshPlayers(BomberLoutreInterface.Player[] p)
        {
            return begin_refreshPlayers(p, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshPlayers> begin_refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_refreshPlayers(p, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_refreshPlayers(BomberLoutreInterface.Player[] p, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_refreshPlayers(p, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_refreshPlayers(p, ctx__, true, cb__, cookie__);
        }

        private const string __refreshPlayers_name = "refreshPlayers";

        public void end_refreshPlayers(Ice.AsyncResult r__)
        {
            end__(r__, __refreshPlayers_name);
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_MapObserver_refreshPlayers> begin_refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_refreshPlayers> result__ = new IceInternal.OnewayOutgoingAsync<BomberLoutreInterface.Callback_MapObserver_refreshPlayers>(this, __refreshPlayers_name, refreshPlayers_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__refreshPlayers_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                if(p == null)
                {
                    os__.writeSize(0);
                }
                else
                {
                    os__.writeSize(p.Length);
                    for(int ix__ = 0; ix__ < p.Length; ++ix__)
                    {
                        (p[ix__] == null ? new BomberLoutreInterface.Player() : p[ix__]).write__(os__);
                    }
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void refreshPlayers_completed__(BomberLoutreInterface.Callback_MapObserver_refreshPlayers cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static MapObserverPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            MapObserverPrx r = b as MapObserverPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                MapObserverPrxHelper h = new MapObserverPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MapObserverPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            MapObserverPrx r = b as MapObserverPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                MapObserverPrxHelper h = new MapObserverPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MapObserverPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    MapObserverPrxHelper h = new MapObserverPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static MapObserverPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    MapObserverPrxHelper h = new MapObserverPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static MapObserverPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            MapObserverPrx r = b as MapObserverPrx;
            if(r == null)
            {
                MapObserverPrxHelper h = new MapObserverPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static MapObserverPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            MapObserverPrxHelper h = new MapObserverPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::BomberLoutreInterface::MapObserver",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new MapObserverDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new MapObserverDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, MapObserverPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static MapObserverPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                MapObserverPrxHelper result = new MapObserverPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ServerInterfacePrxHelper : Ice.ObjectPrxHelperBase, ServerInterfacePrx
    {
        #region Synchronous operations

        public BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo)
        {
            return addGame(name, user, room, mo, null, false);
        }

        public BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return addGame(name, user, room, mo, context__, true);
        }

        private BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("addGame");
                    delBase__ = getDelegate__(false);
                    ServerInterfaceDel_ del__ = (ServerInterfaceDel_)delBase__;
                    return del__.addGame(name, user, room, mo, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public BomberLoutreInterface.UserData connect(string login, string password)
        {
            return connect(login, password, null, false);
        }

        public BomberLoutreInterface.UserData connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return connect(login, password, context__, true);
        }

        private BomberLoutreInterface.UserData connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("connect");
                    delBase__ = getDelegate__(false);
                    ServerInterfaceDel_ del__ = (ServerInterfaceDel_)delBase__;
                    return del__.connect(login, password, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public BomberLoutreInterface.UserData createUser(string login, string password)
        {
            return createUser(login, password, null, false);
        }

        public BomberLoutreInterface.UserData createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return createUser(login, password, context__, true);
        }

        private BomberLoutreInterface.UserData createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("createUser");
                    delBase__ = getDelegate__(false);
                    ServerInterfaceDel_ del__ = (ServerInterfaceDel_)delBase__;
                    return del__.createUser(login, password, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public bool deleteUser(string login)
        {
            return deleteUser(login, null, false);
        }

        public bool deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return deleteUser(login, context__, true);
        }

        private bool deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("deleteUser");
                    delBase__ = getDelegate__(false);
                    ServerInterfaceDel_ del__ = (ServerInterfaceDel_)delBase__;
                    return del__.deleteUser(login, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public BomberLoutreInterface.GameData[] getGameList()
        {
            return getGameList(null, false);
        }

        public BomberLoutreInterface.GameData[] getGameList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getGameList(context__, true);
        }

        private BomberLoutreInterface.GameData[] getGameList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getGameList");
                    delBase__ = getDelegate__(false);
                    ServerInterfaceDel_ del__ = (ServerInterfaceDel_)delBase__;
                    return del__.getGameList(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public BomberLoutreInterface.UserData[] getUserList()
        {
            return getUserList(null, false);
        }

        public BomberLoutreInterface.UserData[] getUserList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getUserList(context__, true);
        }

        private BomberLoutreInterface.UserData[] getUserList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("getUserList");
                    delBase__ = getDelegate__(false);
                    ServerInterfaceDel_ del__ = (ServerInterfaceDel_)delBase__;
                    return del__.getUserList(context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo)
        {
            return joinGame(name, user, room, mo, null, false);
        }

        public BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return joinGame(name, user, room, mo, context__, true);
        }

        private BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("joinGame");
                    delBase__ = getDelegate__(false);
                    ServerInterfaceDel_ del__ = (ServerInterfaceDel_)delBase__;
                    return del__.joinGame(name, user, room, mo, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_addGame> begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo)
        {
            return begin_addGame(name, user, room, mo, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_addGame> begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addGame(name, user, room, mo, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addGame(name, user, room, mo, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addGame(name, user, room, mo, ctx__, true, cb__, cookie__);
        }

        private const string __addGame_name = "addGame";

        public BomberLoutreInterface.GameInterfacePrx end_addGame(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __addGame_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            BomberLoutreInterface.GameInterfacePrx ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = BomberLoutreInterface.GameInterfacePrxHelper.read__(is__);
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_addGame> begin_addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__addGame_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_addGame> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_addGame>(this, __addGame_name, addGame_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__addGame_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(name);
                if(user == null)
                {
                    BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                    tmp__.write__(os__);
                }
                else
                {
                    user.write__(os__);
                }
                BomberLoutreInterface.GameWaitRoomPrxHelper.write__(os__, room);
                BomberLoutreInterface.MapObserverPrxHelper.write__(os__, mo);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void addGame_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_ServerInterface_addGame cb__, Ice.ExceptionCallback excb__)
        {
            BomberLoutreInterface.GameInterfacePrx ret__;
            try
            {
                ret__ = end_addGame(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_connect> begin_connect(string login, string password)
        {
            return begin_connect(login, password, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_connect> begin_connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_connect(login, password, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_connect(string login, string password, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_connect(login, password, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_connect(login, password, ctx__, true, cb__, cookie__);
        }

        private const string __connect_name = "connect";

        public BomberLoutreInterface.UserData end_connect(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __connect_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(BomberLoutreInterface.BadLoginException)
                {
                    throw;
                }
                catch(BomberLoutreInterface.BadPasswordException)
                {
                    throw;
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            BomberLoutreInterface.UserData ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = null;
            if(ret__ == null)
            {
                ret__ = new BomberLoutreInterface.UserData();
            }
            ret__.read__(is__);
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_connect> begin_connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__connect_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_connect> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_connect>(this, __connect_name, connect_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__connect_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(login);
                os__.writeString(password);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void connect_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_ServerInterface_connect cb__, Ice.ExceptionCallback excb__)
        {
            BomberLoutreInterface.UserData ret__;
            try
            {
                ret__ = end_connect(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_createUser> begin_createUser(string login, string password)
        {
            return begin_createUser(login, password, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_createUser> begin_createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_createUser(login, password, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_createUser(string login, string password, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_createUser(login, password, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_createUser(login, password, ctx__, true, cb__, cookie__);
        }

        private const string __createUser_name = "createUser";

        public BomberLoutreInterface.UserData end_createUser(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __createUser_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(BomberLoutreInterface.UserAlreadyExistsException)
                {
                    throw;
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            BomberLoutreInterface.UserData ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = null;
            if(ret__ == null)
            {
                ret__ = new BomberLoutreInterface.UserData();
            }
            ret__.read__(is__);
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_createUser> begin_createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__createUser_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_createUser> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_createUser>(this, __createUser_name, createUser_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__createUser_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(login);
                os__.writeString(password);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void createUser_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_ServerInterface_createUser cb__, Ice.ExceptionCallback excb__)
        {
            BomberLoutreInterface.UserData ret__;
            try
            {
                ret__ = end_createUser(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_deleteUser> begin_deleteUser(string login)
        {
            return begin_deleteUser(login, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_deleteUser> begin_deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_deleteUser(login, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_deleteUser(string login, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_deleteUser(login, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_deleteUser(login, ctx__, true, cb__, cookie__);
        }

        private const string __deleteUser_name = "deleteUser";

        public bool end_deleteUser(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __deleteUser_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            bool ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readBool();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_deleteUser> begin_deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__deleteUser_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_deleteUser> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_deleteUser>(this, __deleteUser_name, deleteUser_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__deleteUser_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(login);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void deleteUser_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_ServerInterface_deleteUser cb__, Ice.ExceptionCallback excb__)
        {
            bool ret__;
            try
            {
                ret__ = end_deleteUser(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getGameList> begin_getGameList()
        {
            return begin_getGameList(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getGameList> begin_getGameList(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getGameList(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getGameList(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getGameList(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getGameList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getGameList(ctx__, true, cb__, cookie__);
        }

        private const string __getGameList_name = "getGameList";

        public BomberLoutreInterface.GameData[] end_getGameList(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getGameList_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            BomberLoutreInterface.GameData[] ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            {
                int szx__ = is__.readAndCheckSeqSize(15);
                ret__ = new BomberLoutreInterface.GameData[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    ret__[ix__] = new BomberLoutreInterface.GameData();
                    ret__[ix__].read__(is__);
                }
            }
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getGameList> begin_getGameList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getGameList_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_getGameList> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_getGameList>(this, __getGameList_name, getGameList_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getGameList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getGameList_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_ServerInterface_getGameList cb__, Ice.ExceptionCallback excb__)
        {
            BomberLoutreInterface.GameData[] ret__;
            try
            {
                ret__ = end_getGameList(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getUserList> begin_getUserList()
        {
            return begin_getUserList(null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getUserList> begin_getUserList(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getUserList(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getUserList(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getUserList(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getUserList(ctx__, true, cb__, cookie__);
        }

        private const string __getUserList_name = "getUserList";

        public BomberLoutreInterface.UserData[] end_getUserList(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getUserList_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            BomberLoutreInterface.UserData[] ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            {
                int szx__ = is__.readAndCheckSeqSize(25);
                ret__ = new BomberLoutreInterface.UserData[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    ret__[ix__] = new BomberLoutreInterface.UserData();
                    ret__[ix__].read__(is__);
                }
            }
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_getUserList> begin_getUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getUserList_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_getUserList> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_getUserList>(this, __getUserList_name, getUserList_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getUserList_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getUserList_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_ServerInterface_getUserList cb__, Ice.ExceptionCallback excb__)
        {
            BomberLoutreInterface.UserData[] ret__;
            try
            {
                ret__ = end_getUserList(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_joinGame> begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo)
        {
            return begin_joinGame(name, user, room, mo, null, false, null, null);
        }

        public Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_joinGame> begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_joinGame(name, user, room, mo, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_joinGame(name, user, room, mo, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_joinGame(name, user, room, mo, ctx__, true, cb__, cookie__);
        }

        private const string __joinGame_name = "joinGame";

        public BomberLoutreInterface.Map end_joinGame(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __joinGame_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            BomberLoutreInterface.Map ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = null;
            if(ret__ == null)
            {
                ret__ = new BomberLoutreInterface.Map();
            }
            ret__.read__(is__);
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<BomberLoutreInterface.Callback_ServerInterface_joinGame> begin_joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__joinGame_name);
            IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_joinGame> result__ =  new IceInternal.TwowayOutgoingAsync<BomberLoutreInterface.Callback_ServerInterface_joinGame>(this, __joinGame_name, joinGame_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__joinGame_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(name);
                if(user == null)
                {
                    BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                    tmp__.write__(os__);
                }
                else
                {
                    user.write__(os__);
                }
                BomberLoutreInterface.GameWaitRoomPrxHelper.write__(os__, room);
                BomberLoutreInterface.MapObserverPrxHelper.write__(os__, mo);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void joinGame_completed__(Ice.AsyncResult r__, BomberLoutreInterface.Callback_ServerInterface_joinGame cb__, Ice.ExceptionCallback excb__)
        {
            BomberLoutreInterface.Map ret__;
            try
            {
                ret__ = end_joinGame(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static ServerInterfacePrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ServerInterfacePrx r = b as ServerInterfacePrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                ServerInterfacePrxHelper h = new ServerInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ServerInterfacePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            ServerInterfacePrx r = b as ServerInterfacePrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ServerInterfacePrxHelper h = new ServerInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ServerInterfacePrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    ServerInterfacePrxHelper h = new ServerInterfacePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ServerInterfacePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    ServerInterfacePrxHelper h = new ServerInterfacePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ServerInterfacePrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ServerInterfacePrx r = b as ServerInterfacePrx;
            if(r == null)
            {
                ServerInterfacePrxHelper h = new ServerInterfacePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ServerInterfacePrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            ServerInterfacePrxHelper h = new ServerInterfacePrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::BomberLoutreInterface::ServerInterface",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new ServerInterfaceDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new ServerInterfaceDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, ServerInterfacePrx v__)
        {
            os__.writeProxy(v__);
        }

        public static ServerInterfacePrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                ServerInterfacePrxHelper result = new ServerInterfacePrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace BomberLoutreInterface
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameUserInterfaceDel_ : Ice.ObjectDel_
    {
        string getCreatorName(_System.Collections.Generic.Dictionary<string, string> context__);

        void userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__);

        void leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameInterfaceDel_ : Ice.ObjectDel_
    {
        string getName(_System.Collections.Generic.Dictionary<string, string> context__);

        int getState(_System.Collections.Generic.Dictionary<string, string> context__);

        int getRoundCount(_System.Collections.Generic.Dictionary<string, string> context__);

        void setName(string newname, _System.Collections.Generic.Dictionary<string, string> context__);

        void setState(int newstate, _System.Collections.Generic.Dictionary<string, string> context__);

        void setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> context__);

        void kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        void invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        void addBot(_System.Collections.Generic.Dictionary<string, string> context__);

        void removeBot(_System.Collections.Generic.Dictionary<string, string> context__);

        string[] getMapList(_System.Collections.Generic.Dictionary<string, string> context__);

        string createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> context__);

        void startMap(_System.Collections.Generic.Dictionary<string, string> context__);

        void endMap(_System.Collections.Generic.Dictionary<string, string> context__);

        bool removeGame(_System.Collections.Generic.Dictionary<string, string> context__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface GameWaitRoomDel_ : Ice.ObjectDel_
    {
        void newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        void userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        void allUsersReady(_System.Collections.Generic.Dictionary<string, string> context__);

        void userReady(string username, _System.Collections.Generic.Dictionary<string, string> context__);

        void gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> context__);

        void newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> context__);

        void gameStart(_System.Collections.Generic.Dictionary<string, string> context__);

        void gameEnd(_System.Collections.Generic.Dictionary<string, string> context__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface MapInterfaceDel_ : Ice.ObjectDel_
    {
        string getId(_System.Collections.Generic.Dictionary<string, string> context__);

        int getWidth(_System.Collections.Generic.Dictionary<string, string> context__);

        int getHeight(_System.Collections.Generic.Dictionary<string, string> context__);

        void moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        void moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        void moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        void moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);

        void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface MapObserverDel_ : Ice.ObjectDel_
    {
        void refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> context__);

        void refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> context__);

        void bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__);

        void bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__);

        void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> context__);

        void bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> context__);

        void playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ServerInterfaceDel_ : Ice.ObjectDel_
    {
        BomberLoutreInterface.UserData connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__);

        BomberLoutreInterface.UserData createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__);

        bool deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> context__);

        BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__);

        BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__);

        BomberLoutreInterface.GameData[] getGameList(_System.Collections.Generic.Dictionary<string, string> context__);

        BomberLoutreInterface.UserData[] getUserList(_System.Collections.Generic.Dictionary<string, string> context__);
    }
}

namespace BomberLoutreInterface
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameUserInterfaceDelM_ : Ice.ObjectDelM_, GameUserInterfaceDel_
    {
        public string getCreatorName(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getCreatorName", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("leaveGame", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(u == null)
                    {
                        BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        u.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("userReady", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(u == null)
                    {
                        BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        u.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameInterfaceDelM_ : Ice.ObjectDelM_, GameInterfaceDel_
    {
        public void addBot(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("addBot", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("createMap", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(mode);
                    os__.writeString(mapSkin);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void endMap(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("endMap", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string[] getMapList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getMapList", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string[] ret__;
                    ret__ = is__.readStringSeq();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string getName(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getName", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public int getRoundCount(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getRoundCount", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    int ret__;
                    ret__ = is__.readInt();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public int getState(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getState", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    int ret__;
                    ret__ = is__.readInt();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("invitePlayer", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(username);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("kickPlayer", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(username);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void removeBot(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("removeBot", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public bool removeGame(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("removeGame", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    bool ret__;
                    ret__ = is__.readBool();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void setName(string newname, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("setName", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(newname);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("setRoundCount", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeInt(newcount);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void setState(int newstate, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("setState", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeInt(newstate);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void startMap(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("startMap", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameWaitRoomDelM_ : Ice.ObjectDelM_, GameWaitRoomDel_
    {
        public void allUsersReady(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("allUsersReady", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("gameDataUpdated", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(g == null)
                    {
                        BomberLoutreInterface.GameData tmp__ = new BomberLoutreInterface.GameData();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        g.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void gameEnd(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("gameEnd", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void gameStart(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("gameStart", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("newMapDefined", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(map);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("newUserInRoom", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(username);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("userLeftRoom", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(username);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void userReady(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("userReady", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(username);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class MapInterfaceDelM_ : Ice.ObjectDelM_, MapInterfaceDel_
    {
        public void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("dropBomb", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(p == null)
                    {
                        BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        p.write__(os__);
                    }
                    b.write__(os__);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public int getHeight(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getHeight", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    int ret__;
                    ret__ = is__.readInt();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string getId(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getId", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public int getWidth(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getWidth", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    int ret__;
                    ret__ = is__.readInt();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("moveDown", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(p == null)
                    {
                        BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        p.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("moveLeft", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(p == null)
                    {
                        BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        p.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("moveRight", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(p == null)
                    {
                        BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        p.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("moveUp", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(p == null)
                    {
                        BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        p.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class MapObserverDelM_ : Ice.ObjectDelM_, MapObserverDel_
    {
        public void bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("bombExploded", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    b.write__(os__);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("bombHasBeenPlanted", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    b.write__(os__);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("bombKicked", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    b.write__(os__);
                    dest.write__(os__);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("bonusesDropped", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(b == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(b.Length);
                        for(int ix__ = 0; ix__ < b.Length; ++ix__)
                        {
                            b[ix__].write__(os__);
                        }
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("playerDied", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(p == null)
                    {
                        BomberLoutreInterface.Player tmp__ = new BomberLoutreInterface.Player();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        p.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("refreshMapItems", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(mi == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(mi.Length);
                        for(int ix__ = 0; ix__ < mi.Length; ++ix__)
                        {
                            mi[ix__].write__(os__);
                        }
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("refreshPlayers", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    if(p == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(p.Length);
                        for(int ix__ = 0; ix__ < p.Length; ++ix__)
                        {
                            (p[ix__] == null ? new BomberLoutreInterface.Player() : p[ix__]).write__(os__);
                        }
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ServerInterfaceDelM_ : Ice.ObjectDelM_, ServerInterfaceDel_
    {
        public BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("addGame", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(name);
                    if(user == null)
                    {
                        BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        user.write__(os__);
                    }
                    BomberLoutreInterface.GameWaitRoomPrxHelper.write__(os__, room);
                    BomberLoutreInterface.MapObserverPrxHelper.write__(os__, mo);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    BomberLoutreInterface.GameInterfacePrx ret__;
                    ret__ = BomberLoutreInterface.GameInterfacePrxHelper.read__(is__);
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public BomberLoutreInterface.UserData connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("connect", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(login);
                    os__.writeString(password);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(BomberLoutreInterface.BadLoginException)
                        {
                            throw;
                        }
                        catch(BomberLoutreInterface.BadPasswordException)
                        {
                            throw;
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    BomberLoutreInterface.UserData ret__;
                    ret__ = null;
                    if(ret__ == null)
                    {
                        ret__ = new BomberLoutreInterface.UserData();
                    }
                    ret__.read__(is__);
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public BomberLoutreInterface.UserData createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("createUser", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(login);
                    os__.writeString(password);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(BomberLoutreInterface.UserAlreadyExistsException)
                        {
                            throw;
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    BomberLoutreInterface.UserData ret__;
                    ret__ = null;
                    if(ret__ == null)
                    {
                        ret__ = new BomberLoutreInterface.UserData();
                    }
                    ret__.read__(is__);
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public bool deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("deleteUser", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(login);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    bool ret__;
                    ret__ = is__.readBool();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public BomberLoutreInterface.GameData[] getGameList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getGameList", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    BomberLoutreInterface.GameData[] ret__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(15);
                        ret__ = new BomberLoutreInterface.GameData[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            ret__[ix__] = new BomberLoutreInterface.GameData();
                            ret__[ix__].read__(is__);
                        }
                    }
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public BomberLoutreInterface.UserData[] getUserList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getUserList", Ice.OperationMode.Normal, context__);
            try
            {
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    BomberLoutreInterface.UserData[] ret__;
                    {
                        int szx__ = is__.readAndCheckSeqSize(25);
                        ret__ = new BomberLoutreInterface.UserData[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            ret__[ix__] = new BomberLoutreInterface.UserData();
                            ret__[ix__].read__(is__);
                        }
                    }
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("joinGame", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(name);
                    if(user == null)
                    {
                        BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        user.write__(os__);
                    }
                    BomberLoutreInterface.GameWaitRoomPrxHelper.write__(os__, room);
                    BomberLoutreInterface.MapObserverPrxHelper.write__(os__, mo);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    BomberLoutreInterface.Map ret__;
                    ret__ = null;
                    if(ret__ == null)
                    {
                        ret__ = new BomberLoutreInterface.Map();
                    }
                    ret__.read__(is__);
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }
}

namespace BomberLoutreInterface
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameUserInterfaceDelD_ : Ice.ObjectDelD_, GameUserInterfaceDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string getCreatorName(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getCreatorName", Ice.OperationMode.Normal, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameUserInterface servant__ = null;
                try
                {
                    servant__ = (GameUserInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getCreatorName(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void leaveGame(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "leaveGame", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameUserInterface servant__ = null;
                try
                {
                    servant__ = (GameUserInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.leaveGame(u, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void userReady(BomberLoutreInterface.UserData u, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "userReady", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameUserInterface servant__ = null;
                try
                {
                    servant__ = (GameUserInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.userReady(u, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameInterfaceDelD_ : Ice.ObjectDelD_, GameInterfaceDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void addBot(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "addBot", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.addBot(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string createMap(string mode, string mapSkin, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "createMap", Ice.OperationMode.Normal, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.createMap(mode, mapSkin, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void endMap(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "endMap", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.endMap(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string[] getMapList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getMapList", Ice.OperationMode.Normal, context__);
            string[] result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getMapList(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string getName(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getName", Ice.OperationMode.Normal, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getName(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public int getRoundCount(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getRoundCount", Ice.OperationMode.Normal, context__);
            int result__ = 0;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getRoundCount(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public int getState(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getState", Ice.OperationMode.Normal, context__);
            int result__ = 0;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getState(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void invitePlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "invitePlayer", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.invitePlayer(username, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void kickPlayer(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "kickPlayer", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.kickPlayer(username, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void removeBot(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "removeBot", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.removeBot(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public bool removeGame(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "removeGame", Ice.OperationMode.Normal, context__);
            bool result__ = false;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.removeGame(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void setName(string newname, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "setName", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.setName(newname, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void setRoundCount(int newcount, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "setRoundCount", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.setRoundCount(newcount, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void setState(int newstate, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "setState", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.setState(newstate, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void startMap(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "startMap", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameInterface servant__ = null;
                try
                {
                    servant__ = (GameInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.startMap(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class GameWaitRoomDelD_ : Ice.ObjectDelD_, GameWaitRoomDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void allUsersReady(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "allUsersReady", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameWaitRoom servant__ = null;
                try
                {
                    servant__ = (GameWaitRoom)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.allUsersReady(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void gameDataUpdated(BomberLoutreInterface.GameData g, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "gameDataUpdated", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameWaitRoom servant__ = null;
                try
                {
                    servant__ = (GameWaitRoom)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.gameDataUpdated(g, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void gameEnd(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "gameEnd", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameWaitRoom servant__ = null;
                try
                {
                    servant__ = (GameWaitRoom)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.gameEnd(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void gameStart(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "gameStart", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameWaitRoom servant__ = null;
                try
                {
                    servant__ = (GameWaitRoom)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.gameStart(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void newMapDefined(string map, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "newMapDefined", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameWaitRoom servant__ = null;
                try
                {
                    servant__ = (GameWaitRoom)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.newMapDefined(map, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void newUserInRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "newUserInRoom", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameWaitRoom servant__ = null;
                try
                {
                    servant__ = (GameWaitRoom)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.newUserInRoom(username, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void userLeftRoom(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "userLeftRoom", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameWaitRoom servant__ = null;
                try
                {
                    servant__ = (GameWaitRoom)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.userLeftRoom(username, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void userReady(string username, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "userReady", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                GameWaitRoom servant__ = null;
                try
                {
                    servant__ = (GameWaitRoom)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.userReady(username, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class MapInterfaceDelD_ : Ice.ObjectDelD_, MapInterfaceDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "dropBomb", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapInterface servant__ = null;
                try
                {
                    servant__ = (MapInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.dropBomb(p, b, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public int getHeight(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getHeight", Ice.OperationMode.Normal, context__);
            int result__ = 0;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapInterface servant__ = null;
                try
                {
                    servant__ = (MapInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getHeight(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string getId(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getId", Ice.OperationMode.Normal, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapInterface servant__ = null;
                try
                {
                    servant__ = (MapInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getId(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public int getWidth(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getWidth", Ice.OperationMode.Normal, context__);
            int result__ = 0;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapInterface servant__ = null;
                try
                {
                    servant__ = (MapInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getWidth(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void moveDown(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "moveDown", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapInterface servant__ = null;
                try
                {
                    servant__ = (MapInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.moveDown(p, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void moveLeft(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "moveLeft", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapInterface servant__ = null;
                try
                {
                    servant__ = (MapInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.moveLeft(p, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void moveRight(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "moveRight", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapInterface servant__ = null;
                try
                {
                    servant__ = (MapInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.moveRight(p, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void moveUp(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "moveUp", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapInterface servant__ = null;
                try
                {
                    servant__ = (MapInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.moveUp(p, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class MapObserverDelD_ : Ice.ObjectDelD_, MapObserverDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void bombExploded(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "bombExploded", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapObserver servant__ = null;
                try
                {
                    servant__ = (MapObserver)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.bombExploded(b, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void bombHasBeenPlanted(BomberLoutreInterface.Bomb b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "bombHasBeenPlanted", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapObserver servant__ = null;
                try
                {
                    servant__ = (MapObserver)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.bombHasBeenPlanted(b, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "bombKicked", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapObserver servant__ = null;
                try
                {
                    servant__ = (MapObserver)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.bombKicked(b, dest, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void bonusesDropped(BomberLoutreInterface.Bonus[] b, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "bonusesDropped", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapObserver servant__ = null;
                try
                {
                    servant__ = (MapObserver)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.bonusesDropped(b, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void playerDied(BomberLoutreInterface.Player p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "playerDied", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapObserver servant__ = null;
                try
                {
                    servant__ = (MapObserver)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.playerDied(p, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void refreshMapItems(BomberLoutreInterface.MapItem[] mi, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "refreshMapItems", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapObserver servant__ = null;
                try
                {
                    servant__ = (MapObserver)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.refreshMapItems(mi, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void refreshPlayers(BomberLoutreInterface.Player[] p, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "refreshPlayers", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                MapObserver servant__ = null;
                try
                {
                    servant__ = (MapObserver)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.refreshPlayers(p, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ServerInterfaceDelD_ : Ice.ObjectDelD_, ServerInterfaceDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "addGame", Ice.OperationMode.Normal, context__);
            BomberLoutreInterface.GameInterfacePrx result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ServerInterface servant__ = null;
                try
                {
                    servant__ = (ServerInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.addGame(name, user, room, mo, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public BomberLoutreInterface.UserData connect(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "connect", Ice.OperationMode.Normal, context__);
            BomberLoutreInterface.UserData result__ = new BomberLoutreInterface.UserData();
            Ice.UserException userException__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ServerInterface servant__ = null;
                try
                {
                    servant__ = (ServerInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                try
                {
                    result__ = servant__.connect(login, password, current__);
                    return Ice.DispatchStatus.DispatchOK;
                }
                catch(Ice.UserException ex__)
                {
                    userException__ = ex__;
                    return Ice.DispatchStatus.DispatchUserException;
                }
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    if(status__ == Ice.DispatchStatus.DispatchUserException)
                    {
                        throw userException__;
                    }
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(BomberLoutreInterface.BadLoginException)
            {
                throw;
            }
            catch(BomberLoutreInterface.BadPasswordException)
            {
                throw;
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public BomberLoutreInterface.UserData createUser(string login, string password, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "createUser", Ice.OperationMode.Normal, context__);
            BomberLoutreInterface.UserData result__ = new BomberLoutreInterface.UserData();
            Ice.UserException userException__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ServerInterface servant__ = null;
                try
                {
                    servant__ = (ServerInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                try
                {
                    result__ = servant__.createUser(login, password, current__);
                    return Ice.DispatchStatus.DispatchOK;
                }
                catch(Ice.UserException ex__)
                {
                    userException__ = ex__;
                    return Ice.DispatchStatus.DispatchUserException;
                }
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    if(status__ == Ice.DispatchStatus.DispatchUserException)
                    {
                        throw userException__;
                    }
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(BomberLoutreInterface.UserAlreadyExistsException)
            {
                throw;
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public bool deleteUser(string login, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "deleteUser", Ice.OperationMode.Normal, context__);
            bool result__ = false;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ServerInterface servant__ = null;
                try
                {
                    servant__ = (ServerInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.deleteUser(login, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public BomberLoutreInterface.GameData[] getGameList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getGameList", Ice.OperationMode.Normal, context__);
            BomberLoutreInterface.GameData[] result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ServerInterface servant__ = null;
                try
                {
                    servant__ = (ServerInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getGameList(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public BomberLoutreInterface.UserData[] getUserList(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getUserList", Ice.OperationMode.Normal, context__);
            BomberLoutreInterface.UserData[] result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ServerInterface servant__ = null;
                try
                {
                    servant__ = (ServerInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getUserList(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "joinGame", Ice.OperationMode.Normal, context__);
            BomberLoutreInterface.Map result__ = new BomberLoutreInterface.Map();
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ServerInterface servant__ = null;
                try
                {
                    servant__ = (ServerInterface)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.joinGame(name, user, room, mo, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }
    }
}

namespace BomberLoutreInterface
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class GameUserInterfaceDisp_ : Ice.ObjectImpl, GameUserInterface
    {
        #region Slice operations

        public string getCreatorName()
        {
            return getCreatorName(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string getCreatorName(Ice.Current current__);

        public void userReady(BomberLoutreInterface.UserData u)
        {
            userReady(u, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void userReady(BomberLoutreInterface.UserData u, Ice.Current current__);

        public void leaveGame(BomberLoutreInterface.UserData u)
        {
            leaveGame(u, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void leaveGame(BomberLoutreInterface.UserData u, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::BomberLoutreInterface::GameUserInterface",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getCreatorName___(GameUserInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.getCreatorName(current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus userReady___(GameUserInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.UserData u;
            u = null;
            if(u == null)
            {
                u = new BomberLoutreInterface.UserData();
            }
            u.read__(is__);
            is__.endReadEncaps();
            obj__.userReady(u, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus leaveGame___(GameUserInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.UserData u;
            u = null;
            if(u == null)
            {
                u = new BomberLoutreInterface.UserData();
            }
            u.read__(is__);
            is__.endReadEncaps();
            obj__.leaveGame(u, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "getCreatorName",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "leaveGame",
            "userReady"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return getCreatorName___(this, inS__, current__);
                }
                case 1:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 2:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 3:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 5:
                {
                    return leaveGame___(this, inS__, current__);
                }
                case 6:
                {
                    return userReady___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::GameUserInterface was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::GameUserInterface was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class GameInterfaceDisp_ : Ice.ObjectImpl, GameInterface
    {
        #region Slice operations

        public string getName()
        {
            return getName(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string getName(Ice.Current current__);

        public int getState()
        {
            return getState(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int getState(Ice.Current current__);

        public int getRoundCount()
        {
            return getRoundCount(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int getRoundCount(Ice.Current current__);

        public void setName(string newname)
        {
            setName(newname, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void setName(string newname, Ice.Current current__);

        public void setState(int newstate)
        {
            setState(newstate, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void setState(int newstate, Ice.Current current__);

        public void setRoundCount(int newcount)
        {
            setRoundCount(newcount, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void setRoundCount(int newcount, Ice.Current current__);

        public void kickPlayer(string username)
        {
            kickPlayer(username, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void kickPlayer(string username, Ice.Current current__);

        public void invitePlayer(string username)
        {
            invitePlayer(username, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void invitePlayer(string username, Ice.Current current__);

        public void addBot()
        {
            addBot(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void addBot(Ice.Current current__);

        public void removeBot()
        {
            removeBot(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void removeBot(Ice.Current current__);

        public string[] getMapList()
        {
            return getMapList(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string[] getMapList(Ice.Current current__);

        public string createMap(string mode, string mapSkin)
        {
            return createMap(mode, mapSkin, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string createMap(string mode, string mapSkin, Ice.Current current__);

        public void startMap()
        {
            startMap(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void startMap(Ice.Current current__);

        public void endMap()
        {
            endMap(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void endMap(Ice.Current current__);

        public bool removeGame()
        {
            return removeGame(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool removeGame(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::BomberLoutreInterface::GameInterface",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getName___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.getName(current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getState___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            int ret__ = obj__.getState(current__);
            os__.writeInt(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getRoundCount___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            int ret__ = obj__.getRoundCount(current__);
            os__.writeInt(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus setName___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string newname;
            newname = is__.readString();
            is__.endReadEncaps();
            obj__.setName(newname, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus setState___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            int newstate;
            newstate = is__.readInt();
            is__.endReadEncaps();
            obj__.setState(newstate, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus setRoundCount___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            int newcount;
            newcount = is__.readInt();
            is__.endReadEncaps();
            obj__.setRoundCount(newcount, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus kickPlayer___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string username;
            username = is__.readString();
            is__.endReadEncaps();
            obj__.kickPlayer(username, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus invitePlayer___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string username;
            username = is__.readString();
            is__.endReadEncaps();
            obj__.invitePlayer(username, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addBot___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            obj__.addBot(current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus removeBot___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            obj__.removeBot(current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getMapList___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string[] ret__ = obj__.getMapList(current__);
            os__.writeStringSeq(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus createMap___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string mode;
            mode = is__.readString();
            string mapSkin;
            mapSkin = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.createMap(mode, mapSkin, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus startMap___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            obj__.startMap(current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus endMap___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            obj__.endMap(current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus removeGame___(GameInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            bool ret__ = obj__.removeGame(current__);
            os__.writeBool(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "addBot",
            "createMap",
            "endMap",
            "getMapList",
            "getName",
            "getRoundCount",
            "getState",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "invitePlayer",
            "kickPlayer",
            "removeBot",
            "removeGame",
            "setName",
            "setRoundCount",
            "setState",
            "startMap"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return addBot___(this, inS__, current__);
                }
                case 1:
                {
                    return createMap___(this, inS__, current__);
                }
                case 2:
                {
                    return endMap___(this, inS__, current__);
                }
                case 3:
                {
                    return getMapList___(this, inS__, current__);
                }
                case 4:
                {
                    return getName___(this, inS__, current__);
                }
                case 5:
                {
                    return getRoundCount___(this, inS__, current__);
                }
                case 6:
                {
                    return getState___(this, inS__, current__);
                }
                case 7:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 8:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 9:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 10:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 11:
                {
                    return invitePlayer___(this, inS__, current__);
                }
                case 12:
                {
                    return kickPlayer___(this, inS__, current__);
                }
                case 13:
                {
                    return removeBot___(this, inS__, current__);
                }
                case 14:
                {
                    return removeGame___(this, inS__, current__);
                }
                case 15:
                {
                    return setName___(this, inS__, current__);
                }
                case 16:
                {
                    return setRoundCount___(this, inS__, current__);
                }
                case 17:
                {
                    return setState___(this, inS__, current__);
                }
                case 18:
                {
                    return startMap___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::GameInterface was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::GameInterface was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class GameWaitRoomDisp_ : Ice.ObjectImpl, GameWaitRoom
    {
        #region Slice operations

        public void newUserInRoom(string username)
        {
            newUserInRoom(username, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void newUserInRoom(string username, Ice.Current current__);

        public void userLeftRoom(string username)
        {
            userLeftRoom(username, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void userLeftRoom(string username, Ice.Current current__);

        public void allUsersReady()
        {
            allUsersReady(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void allUsersReady(Ice.Current current__);

        public void userReady(string username)
        {
            userReady(username, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void userReady(string username, Ice.Current current__);

        public void gameDataUpdated(BomberLoutreInterface.GameData g)
        {
            gameDataUpdated(g, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void gameDataUpdated(BomberLoutreInterface.GameData g, Ice.Current current__);

        public void newMapDefined(string map)
        {
            newMapDefined(map, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void newMapDefined(string map, Ice.Current current__);

        public void gameStart()
        {
            gameStart(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void gameStart(Ice.Current current__);

        public void gameEnd()
        {
            gameEnd(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void gameEnd(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::BomberLoutreInterface::GameWaitRoom",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus newUserInRoom___(GameWaitRoom obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string username;
            username = is__.readString();
            is__.endReadEncaps();
            obj__.newUserInRoom(username, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus userLeftRoom___(GameWaitRoom obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string username;
            username = is__.readString();
            is__.endReadEncaps();
            obj__.userLeftRoom(username, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus allUsersReady___(GameWaitRoom obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            obj__.allUsersReady(current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus userReady___(GameWaitRoom obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string username;
            username = is__.readString();
            is__.endReadEncaps();
            obj__.userReady(username, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus gameDataUpdated___(GameWaitRoom obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.GameData g;
            g = null;
            if(g == null)
            {
                g = new BomberLoutreInterface.GameData();
            }
            g.read__(is__);
            is__.endReadEncaps();
            obj__.gameDataUpdated(g, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus newMapDefined___(GameWaitRoom obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string map;
            map = is__.readString();
            is__.endReadEncaps();
            obj__.newMapDefined(map, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus gameStart___(GameWaitRoom obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            obj__.gameStart(current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus gameEnd___(GameWaitRoom obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            obj__.gameEnd(current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "allUsersReady",
            "gameDataUpdated",
            "gameEnd",
            "gameStart",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "newMapDefined",
            "newUserInRoom",
            "userLeftRoom",
            "userReady"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return allUsersReady___(this, inS__, current__);
                }
                case 1:
                {
                    return gameDataUpdated___(this, inS__, current__);
                }
                case 2:
                {
                    return gameEnd___(this, inS__, current__);
                }
                case 3:
                {
                    return gameStart___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 5:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 6:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 7:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 8:
                {
                    return newMapDefined___(this, inS__, current__);
                }
                case 9:
                {
                    return newUserInRoom___(this, inS__, current__);
                }
                case 10:
                {
                    return userLeftRoom___(this, inS__, current__);
                }
                case 11:
                {
                    return userReady___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::GameWaitRoom was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::GameWaitRoom was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class MapInterfaceDisp_ : Ice.ObjectImpl, MapInterface
    {
        #region Slice operations

        public string getId()
        {
            return getId(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string getId(Ice.Current current__);

        public int getWidth()
        {
            return getWidth(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int getWidth(Ice.Current current__);

        public int getHeight()
        {
            return getHeight(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract int getHeight(Ice.Current current__);

        public void moveUp(BomberLoutreInterface.Player p)
        {
            moveUp(p, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void moveUp(BomberLoutreInterface.Player p, Ice.Current current__);

        public void moveDown(BomberLoutreInterface.Player p)
        {
            moveDown(p, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void moveDown(BomberLoutreInterface.Player p, Ice.Current current__);

        public void moveLeft(BomberLoutreInterface.Player p)
        {
            moveLeft(p, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void moveLeft(BomberLoutreInterface.Player p, Ice.Current current__);

        public void moveRight(BomberLoutreInterface.Player p)
        {
            moveRight(p, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void moveRight(BomberLoutreInterface.Player p, Ice.Current current__);

        public void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b)
        {
            dropBomb(p, b, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void dropBomb(BomberLoutreInterface.Player p, BomberLoutreInterface.Bomb b, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::BomberLoutreInterface::MapInterface",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getId___(MapInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.getId(current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getWidth___(MapInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            int ret__ = obj__.getWidth(current__);
            os__.writeInt(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getHeight___(MapInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            int ret__ = obj__.getHeight(current__);
            os__.writeInt(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus moveUp___(MapInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Player p;
            p = null;
            if(p == null)
            {
                p = new BomberLoutreInterface.Player();
            }
            p.read__(is__);
            is__.endReadEncaps();
            obj__.moveUp(p, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus moveDown___(MapInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Player p;
            p = null;
            if(p == null)
            {
                p = new BomberLoutreInterface.Player();
            }
            p.read__(is__);
            is__.endReadEncaps();
            obj__.moveDown(p, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus moveLeft___(MapInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Player p;
            p = null;
            if(p == null)
            {
                p = new BomberLoutreInterface.Player();
            }
            p.read__(is__);
            is__.endReadEncaps();
            obj__.moveLeft(p, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus moveRight___(MapInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Player p;
            p = null;
            if(p == null)
            {
                p = new BomberLoutreInterface.Player();
            }
            p.read__(is__);
            is__.endReadEncaps();
            obj__.moveRight(p, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus dropBomb___(MapInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Player p;
            p = null;
            if(p == null)
            {
                p = new BomberLoutreInterface.Player();
            }
            p.read__(is__);
            BomberLoutreInterface.Bomb b;
            b = new BomberLoutreInterface.Bomb();
            b.read__(is__);
            is__.endReadEncaps();
            obj__.dropBomb(p, b, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "dropBomb",
            "getHeight",
            "getId",
            "getWidth",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "moveDown",
            "moveLeft",
            "moveRight",
            "moveUp"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return dropBomb___(this, inS__, current__);
                }
                case 1:
                {
                    return getHeight___(this, inS__, current__);
                }
                case 2:
                {
                    return getId___(this, inS__, current__);
                }
                case 3:
                {
                    return getWidth___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 5:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 6:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 7:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 8:
                {
                    return moveDown___(this, inS__, current__);
                }
                case 9:
                {
                    return moveLeft___(this, inS__, current__);
                }
                case 10:
                {
                    return moveRight___(this, inS__, current__);
                }
                case 11:
                {
                    return moveUp___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::MapInterface was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::MapInterface was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class MapObserverDisp_ : Ice.ObjectImpl, MapObserver
    {
        #region Slice operations

        public void refreshMapItems(BomberLoutreInterface.MapItem[] mi)
        {
            refreshMapItems(mi, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void refreshMapItems(BomberLoutreInterface.MapItem[] mi, Ice.Current current__);

        public void refreshPlayers(BomberLoutreInterface.Player[] p)
        {
            refreshPlayers(p, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void refreshPlayers(BomberLoutreInterface.Player[] p, Ice.Current current__);

        public void bombHasBeenPlanted(BomberLoutreInterface.Bomb b)
        {
            bombHasBeenPlanted(b, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void bombHasBeenPlanted(BomberLoutreInterface.Bomb b, Ice.Current current__);

        public void bombExploded(BomberLoutreInterface.Bomb b)
        {
            bombExploded(b, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void bombExploded(BomberLoutreInterface.Bomb b, Ice.Current current__);

        public void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest)
        {
            bombKicked(b, dest, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void bombKicked(BomberLoutreInterface.Bomb b, BomberLoutreInterface.Point dest, Ice.Current current__);

        public void bonusesDropped(BomberLoutreInterface.Bonus[] b)
        {
            bonusesDropped(b, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void bonusesDropped(BomberLoutreInterface.Bonus[] b, Ice.Current current__);

        public void playerDied(BomberLoutreInterface.Player p)
        {
            playerDied(p, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void playerDied(BomberLoutreInterface.Player p, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::BomberLoutreInterface::MapObserver",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus refreshMapItems___(MapObserver obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.MapItem[] mi;
            {
                int szx__ = is__.readAndCheckSeqSize(10);
                mi = new BomberLoutreInterface.MapItem[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    mi[ix__].read__(is__);
                }
            }
            is__.endReadEncaps();
            obj__.refreshMapItems(mi, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus refreshPlayers___(MapObserver obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Player[] p;
            {
                int szx__ = is__.readAndCheckSeqSize(53);
                p = new BomberLoutreInterface.Player[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    p[ix__] = new BomberLoutreInterface.Player();
                    p[ix__].read__(is__);
                }
            }
            is__.endReadEncaps();
            obj__.refreshPlayers(p, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus bombHasBeenPlanted___(MapObserver obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Bomb b;
            b = new BomberLoutreInterface.Bomb();
            b.read__(is__);
            is__.endReadEncaps();
            obj__.bombHasBeenPlanted(b, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus bombExploded___(MapObserver obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Bomb b;
            b = new BomberLoutreInterface.Bomb();
            b.read__(is__);
            is__.endReadEncaps();
            obj__.bombExploded(b, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus bombKicked___(MapObserver obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Bomb b;
            b = new BomberLoutreInterface.Bomb();
            b.read__(is__);
            BomberLoutreInterface.Point dest;
            dest = new BomberLoutreInterface.Point();
            dest.read__(is__);
            is__.endReadEncaps();
            obj__.bombKicked(b, dest, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus bonusesDropped___(MapObserver obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Bonus[] b;
            {
                int szx__ = is__.readAndCheckSeqSize(21);
                b = new BomberLoutreInterface.Bonus[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    b[ix__].read__(is__);
                }
            }
            is__.endReadEncaps();
            obj__.bonusesDropped(b, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus playerDied___(MapObserver obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            BomberLoutreInterface.Player p;
            p = null;
            if(p == null)
            {
                p = new BomberLoutreInterface.Player();
            }
            p.read__(is__);
            is__.endReadEncaps();
            obj__.playerDied(p, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "bombExploded",
            "bombHasBeenPlanted",
            "bombKicked",
            "bonusesDropped",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "playerDied",
            "refreshMapItems",
            "refreshPlayers"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return bombExploded___(this, inS__, current__);
                }
                case 1:
                {
                    return bombHasBeenPlanted___(this, inS__, current__);
                }
                case 2:
                {
                    return bombKicked___(this, inS__, current__);
                }
                case 3:
                {
                    return bonusesDropped___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 5:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 6:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 7:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 8:
                {
                    return playerDied___(this, inS__, current__);
                }
                case 9:
                {
                    return refreshMapItems___(this, inS__, current__);
                }
                case 10:
                {
                    return refreshPlayers___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::MapObserver was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::MapObserver was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class ServerInterfaceDisp_ : Ice.ObjectImpl, ServerInterface
    {
        #region Slice operations

        public BomberLoutreInterface.UserData connect(string login, string password)
        {
            return connect(login, password, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract BomberLoutreInterface.UserData connect(string login, string password, Ice.Current current__);

        public BomberLoutreInterface.UserData createUser(string login, string password)
        {
            return createUser(login, password, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract BomberLoutreInterface.UserData createUser(string login, string password, Ice.Current current__);

        public bool deleteUser(string login)
        {
            return deleteUser(login, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract bool deleteUser(string login, Ice.Current current__);

        public BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo)
        {
            return addGame(name, user, room, mo, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract BomberLoutreInterface.GameInterfacePrx addGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, Ice.Current current__);

        public BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo)
        {
            return joinGame(name, user, room, mo, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract BomberLoutreInterface.Map joinGame(string name, BomberLoutreInterface.UserData user, BomberLoutreInterface.GameWaitRoomPrx room, BomberLoutreInterface.MapObserverPrx mo, Ice.Current current__);

        public BomberLoutreInterface.GameData[] getGameList()
        {
            return getGameList(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract BomberLoutreInterface.GameData[] getGameList(Ice.Current current__);

        public BomberLoutreInterface.UserData[] getUserList()
        {
            return getUserList(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract BomberLoutreInterface.UserData[] getUserList(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::BomberLoutreInterface::ServerInterface",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus connect___(ServerInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string login;
            login = is__.readString();
            string password;
            password = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            try
            {
                BomberLoutreInterface.UserData ret__ = obj__.connect(login, password, current__);
                if(ret__ == null)
                {
                    BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                    tmp__.write__(os__);
                }
                else
                {
                    ret__.write__(os__);
                }
                return Ice.DispatchStatus.DispatchOK;
            }
            catch(BomberLoutreInterface.BadLoginException ex__)
            {
                os__.writeUserException(ex__);
                return Ice.DispatchStatus.DispatchUserException;
            }
            catch(BomberLoutreInterface.BadPasswordException ex__)
            {
                os__.writeUserException(ex__);
                return Ice.DispatchStatus.DispatchUserException;
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus createUser___(ServerInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string login;
            login = is__.readString();
            string password;
            password = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            try
            {
                BomberLoutreInterface.UserData ret__ = obj__.createUser(login, password, current__);
                if(ret__ == null)
                {
                    BomberLoutreInterface.UserData tmp__ = new BomberLoutreInterface.UserData();
                    tmp__.write__(os__);
                }
                else
                {
                    ret__.write__(os__);
                }
                return Ice.DispatchStatus.DispatchOK;
            }
            catch(BomberLoutreInterface.UserAlreadyExistsException ex__)
            {
                os__.writeUserException(ex__);
                return Ice.DispatchStatus.DispatchUserException;
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus deleteUser___(ServerInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string login;
            login = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            bool ret__ = obj__.deleteUser(login, current__);
            os__.writeBool(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addGame___(ServerInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string name;
            name = is__.readString();
            BomberLoutreInterface.UserData user;
            user = null;
            if(user == null)
            {
                user = new BomberLoutreInterface.UserData();
            }
            user.read__(is__);
            BomberLoutreInterface.GameWaitRoomPrx room;
            room = BomberLoutreInterface.GameWaitRoomPrxHelper.read__(is__);
            BomberLoutreInterface.MapObserverPrx mo;
            mo = BomberLoutreInterface.MapObserverPrxHelper.read__(is__);
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            BomberLoutreInterface.GameInterfacePrx ret__ = obj__.addGame(name, user, room, mo, current__);
            BomberLoutreInterface.GameInterfacePrxHelper.write__(os__, ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus joinGame___(ServerInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string name;
            name = is__.readString();
            BomberLoutreInterface.UserData user;
            user = null;
            if(user == null)
            {
                user = new BomberLoutreInterface.UserData();
            }
            user.read__(is__);
            BomberLoutreInterface.GameWaitRoomPrx room;
            room = BomberLoutreInterface.GameWaitRoomPrxHelper.read__(is__);
            BomberLoutreInterface.MapObserverPrx mo;
            mo = BomberLoutreInterface.MapObserverPrxHelper.read__(is__);
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            BomberLoutreInterface.Map ret__ = obj__.joinGame(name, user, room, mo, current__);
            if(ret__ == null)
            {
                BomberLoutreInterface.Map tmp__ = new BomberLoutreInterface.Map();
                tmp__.write__(os__);
            }
            else
            {
                ret__.write__(os__);
            }
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getGameList___(ServerInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            BomberLoutreInterface.GameData[] ret__ = obj__.getGameList(current__);
            if(ret__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(ret__.Length);
                for(int ix__ = 0; ix__ < ret__.Length; ++ix__)
                {
                    (ret__[ix__] == null ? new BomberLoutreInterface.GameData() : ret__[ix__]).write__(os__);
                }
            }
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getUserList___(ServerInterface obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.istr().skipEmptyEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            BomberLoutreInterface.UserData[] ret__ = obj__.getUserList(current__);
            if(ret__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(ret__.Length);
                for(int ix__ = 0; ix__ < ret__.Length; ++ix__)
                {
                    (ret__[ix__] == null ? new BomberLoutreInterface.UserData() : ret__[ix__]).write__(os__);
                }
            }
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "addGame",
            "connect",
            "createUser",
            "deleteUser",
            "getGameList",
            "getUserList",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "joinGame"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return addGame___(this, inS__, current__);
                }
                case 1:
                {
                    return connect___(this, inS__, current__);
                }
                case 2:
                {
                    return createUser___(this, inS__, current__);
                }
                case 3:
                {
                    return deleteUser___(this, inS__, current__);
                }
                case 4:
                {
                    return getGameList___(this, inS__, current__);
                }
                case 5:
                {
                    return getUserList___(this, inS__, current__);
                }
                case 6:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 7:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 8:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 9:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 10:
                {
                    return joinGame___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::ServerInterface was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type BomberLoutreInterface::ServerInterface was not generated with stream support";
            throw ex;
        }

        #endregion
    }
}
